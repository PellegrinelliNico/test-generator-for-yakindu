testclass StatechartTest for statechart Statechart {
	@Test
	operation test01 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    raise work
	    proceed 1 cycle
	    proceed 1 cycle
	    assert is_active
	}

	@Test
	operation test02 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    proceed 1 cycle
	    assert is_active
	}

	@Test
	operation test03 () {
	    enter
	    proceed 1 cycle
	    assert is_active
	}

	@Test
	operation test05 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    raise work
	    proceed 1 cycle
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test06 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test07 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    enter
	    assert is_active
	    assert !active (Statechart.mainregion.on.r1.analyses)
	}

	@Test
	operation test09 () {
	    enter
	    assert is_active
	    assert !active (Statechart.mainregion.on)
	}

	@Test
	operation test10 () {
	    enter
	    raise power_on
	    proceed 1 cycle
	    assert is_active
	    assert active (Statechart.mainregion.idle)
	}

	@Test
	operation test11 () {
	    enter
	    assert is_active
	    assert active (Statechart.mainregion.off)
	}

	@Test
	operation test25 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    raise work
	    proceed 1 cycle
	    raise end_all
	    proceed 1 cycle
	    assert is_active
	    assert is_final
	}

	@Test
	operation test28 () {
	    enter
	    assert is_active
	}

	@Test
	operation test29 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    raise work
	    proceed 1 cycle
	    raise end_all
	    proceed 1 cycle
	    proceed 1 cycle
	    assert is_active
	}

	@Test
	operation test33 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    raise work
	    proceed 1 cycle
	    raise end_all
	    proceed 1 cycle
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test35 () {
	    raise power_on
	    enter
	    proceed 1 cycle
	    raise analize
	    proceed 1 cycle
	    assert is_active
	    exit
	    assert !is_active
	}

}