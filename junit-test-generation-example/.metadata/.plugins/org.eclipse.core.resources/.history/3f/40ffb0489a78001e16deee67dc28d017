/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 01 07:34:58 GMT 2023
 */

package machines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import machines.SimpleSeries;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleSeries_ESTest extends SimpleSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.setIsExecuting(true);
      simpleSeries0.raiseEvent3();
      boolean boolean0 = simpleSeries0.nextEvent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      boolean boolean0 = simpleSeries0.nextEvent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.setIsExecuting(true);
      boolean boolean0 = simpleSeries0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      boolean boolean0 = simpleSeries0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      // Undeclared exception!
      try { 
        simpleSeries0.isStateActive((SimpleSeries.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("machines.SimpleSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      simpleSeries0.raiseEvent1();
      assertTrue(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent1();
      simpleSeries0.triggerWithoutEvent();
      assertTrue(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.triggerWithoutEvent();
      assertTrue(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.exit();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      assertTrue(simpleSeries0.isActive());
      
      simpleSeries0.exit();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent1();
      assertTrue(simpleSeries0.isActive());
      
      simpleSeries0.exit();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      assertTrue(simpleSeries0.isActive());
      
      simpleSeries0.exit();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      simpleSeries0.raiseEvent3();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION__FINAL_;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertTrue(simpleSeries0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION_STATEC;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertTrue(simpleSeries0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent1();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION_STATEB;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertTrue(simpleSeries0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION_STATEA;
      simpleSeries0.enter();
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertTrue(simpleSeries0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.$NULLSTATE$;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION_STATEC;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION_STATEB;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION__FINAL_;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      SimpleSeries.State simpleSeries_State0 = SimpleSeries.State.MAIN_REGION_STATEA;
      boolean boolean0 = simpleSeries0.isStateActive(simpleSeries_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.setIsExecuting(true);
      simpleSeries0.raiseEvent2();
      simpleSeries0.setIsExecuting(false);
      simpleSeries0.raiseEvent1();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      simpleSeries0.raiseEvent3();
      boolean boolean0 = simpleSeries0.isFinal();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      boolean boolean0 = simpleSeries0.isFinal();
      assertFalse(boolean0);
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      assertFalse(simpleSeries0.isActive());
      
      simpleSeries0.enter();
      boolean boolean0 = simpleSeries0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      boolean boolean0 = simpleSeries0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.setIsExecuting(true);
      simpleSeries0.exit();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      simpleSeries0.raiseEvent3();
      simpleSeries0.triggerWithoutEvent();
      assertTrue(simpleSeries0.isFinal());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      assertFalse(simpleSeries0.isActive());
      
      simpleSeries0.enter();
      simpleSeries0.raiseEvent1();
      simpleSeries0.raiseEvent2();
      assertTrue(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.enter();
      simpleSeries0.raiseEvent2();
      simpleSeries0.raiseEvent3();
      assertTrue(simpleSeries0.isActive());
      
      simpleSeries0.exit();
      assertFalse(simpleSeries0.isActive());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleSeries simpleSeries0 = new SimpleSeries();
      simpleSeries0.setIsExecuting(true);
      simpleSeries0.enter();
      assertFalse(simpleSeries0.isActive());
  }
}
