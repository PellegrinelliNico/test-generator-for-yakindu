/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 17 09:32:42 GMT 2024
 */

package temp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import temp.ExamplStc;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExamplStc_ESTest extends ExamplStc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseWork();
      examplStc0.raiseEnd();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isFinal());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setIsExecuting(true);
      examplStc0.raiseNotUsed3();
      boolean boolean0 = examplStc0.nextEvent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      boolean boolean0 = examplStc0.nextEvent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      long long0 = examplStc0.getStateConfVectorPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setStateConfVectorPosition(632L);
      long long0 = examplStc0.getStateConfVectorPosition();
      assertEquals(632L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setStateConfVectorPosition((-4282L));
      long long0 = examplStc0.getStateConfVectorPosition();
      assertEquals((-4282L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setIsExecuting(true);
      boolean boolean0 = examplStc0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      boolean boolean0 = examplStc0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      // Undeclared exception!
      try { 
        examplStc0.isStateActive((ExamplStc.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("temp.ExamplStc", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raiseStart();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R_2_AN2_B;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R___1_AN1;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.raiseA();
      assertFalse(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseA();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseA();
      examplStc0.raiseEnd();
      examplStc0.raiseAnalyze();
      assertFalse(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseWork();
      examplStc0.raiseAnalyze();
      examplStc0.raiseEnd();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseA();
      examplStc0.raiseEnd();
      examplStc0.triggerWithoutEvent();
      assertFalse(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.triggerWithoutEvent();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseEnd_all();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.enter();
      examplStc0.raiseEnd_all();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseWork();
      examplStc0.raiseEnd_all();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseA();
      examplStc0.raiseEnd();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseA();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseWork();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseA();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R_2_AN2_A;
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.enter();
      examplStc0.raiseB12W();
      examplStc0.triggerWithoutEvent();
      assertTrue(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_INIT_ANALYSES;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_IDLE;
      examplStc0.raisePower_on();
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_OFF_;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.$NULLSTATE$;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R_2_AN2_A;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_CHILL;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION__FINAL_;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0__FINAL_;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_END_ANALYSES;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_INIT_ANALYSES;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_ON_R_0_WORKING;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_IDLE;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      ExamplStc.State examplStc_State0 = ExamplStc.State.MAIN_REGION_OFF_;
      boolean boolean0 = examplStc0.isStateActive(examplStc_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setIsExecuting(true);
      examplStc0.raiseNotUsed3();
      examplStc0.setIsExecuting(false);
      examplStc0.raiseAnalyze();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseEnd_all();
      boolean boolean0 = examplStc0.isFinal();
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      boolean boolean0 = examplStc0.isFinal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseWork();
      examplStc0.raiseEnd();
      boolean boolean0 = examplStc0.isFinal();
      assertTrue(examplStc0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      boolean boolean0 = examplStc0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      boolean boolean0 = examplStc0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setIsExecuting(true);
      examplStc0.exit();
      assertFalse(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.setIsExecuting(true);
      examplStc0.enter();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.raiseNotUsed1();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseEnd_all();
      assertTrue(examplStc0.isActive());
      
      examplStc0.exit();
      assertFalse(examplStc0.isActive());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.raiseNotUsed2();
      assertFalse(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseWork();
      examplStc0.raiseEnd();
      examplStc0.raiseEnd_all();
      assertTrue(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseEnd_all();
      examplStc0.raiseAnalyze();
      assertTrue(examplStc0.isFinal());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ExamplStc examplStc0 = new ExamplStc();
      examplStc0.enter();
      examplStc0.raisePower_on();
      examplStc0.raiseAnalyze();
      examplStc0.raiseStart();
      examplStc0.raiseB12W();
      examplStc0.raiseA();
      examplStc0.raiseEnd();
      examplStc0.raiseEnd();
      assertTrue(examplStc0.isFinal());
  }
}
