testclass StatechartTest for statechart Statechart {
	@Test
	operation test08 () {
	    enter
	    raise power_on
	    raise analyze
	    raise start
	    raise start
	    assert !is_final
	}

	@Test
	operation test09 () {
	    enter
	    raise power_on
	    raise start
	    assert is_active
	}

	@Test
	operation test10 () {
	    enter
	    raise power_on
	    raise analyze
	    raise start
	    raise a
	    assert is_active
	}

	@Test
	operation test11 () {
	    enter
	    raise power_on
	    raise a
	    assert is_active
	}

	@Test
	operation test12 () {
	    enter
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test14 () {
	    enter
	    raise power_on
	    raise analyze
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test15 () {
	    enter
	    raise power_on
	    raise work
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test16 () {
	    enter
	    raise power_on
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test17 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test18 () {
	    enter
	    assert active (Statechart.main_region.On.r_0.analyses012.r_2.an2b)
	}

	@Test
	operation test20 () {
	    enter
	    assert is_active
	    assert !active (Statechart.main_region._of____f___)
	}

	@Test
	operation test21 () {
	    enter
	    assert is_active
	    assert !active (Statechart.main.region.on)
	}

	@Test
	operation test22 () {
	    enter
	    raise power_on
	    assert is_active
	    assert active (Statechart.main.region.idle)
	}

	@Test
	operation test23 () {
	    enter
	    assert is_active
	    assert active (Statechart.main.region.off)
	}

	@Test
	operation test38 () {
	    assert !is_active
	    enter
	    raise power_on
	    raise analyze
	    raise start
	    raise b
	    raise analyze
	    assert is_active
	}

	@Test
	operation test39 () {
	    enter
	    raise power_on
	    raise work
	    raise end_all
	    assert is_final
	}

	@Test
	operation test42 () {
	    assert !is_active
	    enter
	    assert is_active
	}

	@Test
	operation test45 () {
	    enter
	    raise power_on
	    raise analyze
	    raise end_all
	    raise end_all
	    assert is_final
	}

	@Test
	operation test46 () {
	    enter
	    raise power_on
	    raise analyze
	    raise start
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test47 () {
	    enter
	    raise power_on
	    raise analyze
	    raise end_all
	    assert is_final
	    exit
	    assert !is_active
	}

	@Test
	operation test48 () {
	    enter
	    raise power_on
	    raise analyze
	    raise start
	    raise b
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test49 () {
	    enter
	    raise power_on
	    raise work
	    raise end
	    raise end_all
	    assert is_final
	}

}