/*
 * This file was automatically generated by EvoSuite
 * Tue May 14 19:36:16 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.CoffeeMachine;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CoffeeMachine_ESTest extends CoffeeMachine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      assertEquals(0L, coffeeMachine0.getValue());
      
      coffeeMachine0.setValue(1L);
      long long0 = coffeeMachine0.getValue();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      coffeeMachine0.setIsExecuting(true);
      boolean boolean0 = coffeeMachine0.getIsExecuting();
      assertTrue(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      boolean boolean0 = coffeeMachine0.getIsExecuting();
      assertEquals(0L, coffeeMachine0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.isStateActive((CoffeeMachine.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.$NULLSTATE$;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertEquals(0L, coffeeMachine0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_CUPDISPENSER;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertFalse(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_RETURN_CANCEL;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertEquals(0L, coffeeMachine0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_CAPPUCINO;
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertFalse(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_LATTE;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertFalse(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_AMERICANO;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertEquals(0L, coffeeMachine0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_HEAT_AND_WATER;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertFalse(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      CoffeeMachine.State coffeeMachine_State0 = CoffeeMachine.State.MAIN_REGION_ENTERMONEY;
      boolean boolean0 = coffeeMachine0.isStateActive(coffeeMachine_State0);
      assertEquals(0L, coffeeMachine0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      boolean boolean0 = coffeeMachine0.nextEvent();
      assertFalse(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      boolean boolean0 = coffeeMachine0.isActive();
      assertFalse(boolean0);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      coffeeMachine0.getTimerService();
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      boolean boolean0 = coffeeMachine0.isFinal();
      assertEquals(0L, coffeeMachine0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseButtonC();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseButtonA();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      long long0 = coffeeMachine0.getValue();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      coffeeMachine0.setTimerService((ITimerService) null);
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      coffeeMachine0.setIsExecuting(true);
      coffeeMachine0.exit();
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseReturnCoffee();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseMyEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseOperate();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      assertFalse(coffeeMachine0.isActive());
      
      coffeeMachine0.exit();
      assertEquals(0L, coffeeMachine0.getValue());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseButtonB();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseButtonD();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CoffeeMachine coffeeMachine0 = new CoffeeMachine();
      // Undeclared exception!
      try { 
        coffeeMachine0.raiseTimeEvent((-1157));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.CoffeeMachine", e);
      }
  }
}
