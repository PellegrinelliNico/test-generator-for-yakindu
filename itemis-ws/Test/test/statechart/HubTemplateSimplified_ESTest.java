/*
 * This file was automatically generated by EvoSuite
 * Tue May 21 07:37:13 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.HubTemplateSimplified;
import statechart.Hub_PowerManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HubTemplateSimplified_ESTest extends HubTemplateSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      // Undeclared exception!
      try { 
        hubTemplateSimplified0.isStateActive((HubTemplateSimplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.System1 hubTemplateSimplified_System1_0 = new HubTemplateSimplified.System1(hubTemplateSimplified0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.System2 hubTemplateSimplified_System2_0 = new HubTemplateSimplified.System2(hubTemplateSimplified0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HubTemplateSimplified.Power hubTemplateSimplified_Power0 = new HubTemplateSimplified.Power();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hubTemplateSimplified0.setPowerManager(hub_PowerManager0);
      assertFalse(hubTemplateSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State.$NULLSTATE$;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SYSTEM2REGION_SYSTEM2_STATUS;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SYSTEM1REGION_SYSTEM1_STATUS;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_NETWORKREGION_CONNECTED;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_NETWORKREGION_NO_CONNECTION;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_SYSTEM2;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_SYSTEM1;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_SYSTEM2OFF;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_SYSTEM1OFF;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_SYSTEM1ON;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_SYSTEM2ON;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.State hubTemplateSimplified_State0 = HubTemplateSimplified.State._HUB_TEMPLATE__HUBOFF;
      boolean boolean0 = hubTemplateSimplified0.isStateActive(hubTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      boolean boolean0 = hubTemplateSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      // Undeclared exception!
      try { 
        hubTemplateSimplified0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.HUB hubTemplateSimplified_HUB0 = new HubTemplateSimplified.HUB(hubTemplateSimplified0);
      // Undeclared exception!
      try { 
        hubTemplateSimplified_HUB0.raiseTurnOFFSystems();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      // Undeclared exception!
      try { 
        hubTemplateSimplified0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      // Undeclared exception!
      try { 
        hubTemplateSimplified0.raiseToggle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      hubTemplateSimplified0.exit();
      assertFalse(hubTemplateSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.HUB hubTemplateSimplified_HUB0 = hubTemplateSimplified0.hUB();
      // Undeclared exception!
      try { 
        hubTemplateSimplified_HUB0.raiseTurnONSystems();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      hubTemplateSimplified0.setTimerService((ITimerService) null);
      assertFalse(hubTemplateSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      hubTemplateSimplified0.power();
      assertFalse(hubTemplateSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      // Undeclared exception!
      try { 
        hubTemplateSimplified0.raiseTimeEvent(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      boolean boolean0 = hubTemplateSimplified0.isFinal();
      assertFalse(hubTemplateSimplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.Network hubTemplateSimplified_Network0 = hubTemplateSimplified0.network();
      // Undeclared exception!
      try { 
        hubTemplateSimplified_Network0.raiseError();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.Network hubTemplateSimplified_Network0 = new HubTemplateSimplified.Network(hubTemplateSimplified0);
      // Undeclared exception!
      try { 
        hubTemplateSimplified_Network0.raiseConnect();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.System2 hubTemplateSimplified_System2_0 = hubTemplateSimplified0.system2();
      // Undeclared exception!
      try { 
        hubTemplateSimplified_System2_0.raiseToggle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HubTemplateSimplified hubTemplateSimplified0 = new HubTemplateSimplified();
      HubTemplateSimplified.System1 hubTemplateSimplified_System1_0 = hubTemplateSimplified0.system1();
      // Undeclared exception!
      try { 
        hubTemplateSimplified_System1_0.raiseToggle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplateSimplified", e);
      }
  }
}
