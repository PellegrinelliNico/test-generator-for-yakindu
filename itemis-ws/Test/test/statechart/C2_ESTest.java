/*
 * This file was automatically generated by EvoSuite
 * Tue May 14 19:33:36 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.C2;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class C2_ESTest extends C2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      C2 c2_0 = new C2();
      c2_0.setX(1637L);
      long long0 = c2_0.getX();
      assertEquals(1637L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      C2 c2_0 = new C2();
      c2_0.setX((-2915L));
      long long0 = c2_0.getX();
      assertEquals((-2915L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      C2 c2_0 = new C2();
      c2_0.setIsExecuting(true);
      boolean boolean0 = c2_0.getIsExecuting();
      assertEquals(0L, c2_0.getX());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      C2 c2_0 = new C2();
      boolean boolean0 = c2_0.getIsExecuting();
      assertEquals(0L, c2_0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      C2 c2_0 = new C2();
      // Undeclared exception!
      try { 
        c2_0.isStateActive((C2.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.C2", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      C2 c2_0 = new C2();
      C2.State c2_State0 = C2.State.$NULLSTATE$;
      boolean boolean0 = c2_0.isStateActive(c2_State0);
      assertFalse(boolean0);
      assertEquals(0L, c2_0.getX());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      C2 c2_0 = new C2();
      C2.State c2_State0 = C2.State.MAIN_REGION_ONE;
      boolean boolean0 = c2_0.isStateActive(c2_State0);
      assertEquals(0L, c2_0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      C2 c2_0 = new C2();
      C2.State c2_State0 = C2.State.MAIN_REGION_ZERO;
      boolean boolean0 = c2_0.isStateActive(c2_State0);
      assertEquals(0L, c2_0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      C2 c2_0 = new C2();
      C2.State c2_State0 = C2.State.MAIN_REGION_INITIAL;
      boolean boolean0 = c2_0.isStateActive(c2_State0);
      assertEquals(0L, c2_0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      C2 c2_0 = new C2();
      C2.State c2_State0 = C2.State.MAIN_REGION_TEMP;
      boolean boolean0 = c2_0.isStateActive(c2_State0);
      assertEquals(0L, c2_0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      C2 c2_0 = new C2();
      boolean boolean0 = c2_0.nextEvent();
      assertFalse(boolean0);
      assertEquals(0L, c2_0.getX());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      C2 c2_0 = new C2();
      boolean boolean0 = c2_0.isActive();
      assertFalse(boolean0);
      assertEquals(0L, c2_0.getX());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      C2 c2_0 = new C2();
      // Undeclared exception!
      try { 
        c2_0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.C2", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      C2 c2_0 = new C2();
      c2_0.setTimerService((ITimerService) null);
      assertEquals(0L, c2_0.getX());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      C2 c2_0 = new C2();
      boolean boolean0 = c2_0.isFinal();
      assertFalse(boolean0);
      assertEquals(0L, c2_0.getX());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      C2 c2_0 = new C2();
      long long0 = c2_0.getX();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      C2 c2_0 = new C2();
      assertFalse(c2_0.isActive());
      
      c2_0.exit();
      assertEquals(0L, c2_0.getX());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      C2 c2_0 = new C2();
      c2_0.getTimerService();
      assertEquals(0L, c2_0.getX());
      assertFalse(c2_0.isActive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      C2 c2_0 = new C2();
      // Undeclared exception!
      try { 
        c2_0.raiseTimeEvent(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.C2", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      C2 c2_0 = new C2();
      // Undeclared exception!
      try { 
        c2_0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.C2", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      C2 c2_0 = new C2();
      c2_0.setIsExecuting(true);
      c2_0.exit();
      assertFalse(c2_0.isActive());
      assertEquals(0L, c2_0.getX());
  }
}
