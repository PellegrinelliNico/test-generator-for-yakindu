/*
 * This file was automatically generated by EvoSuite
 * Tue May 21 07:40:40 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.Actuator_Component;
import statechart.Controller_Component;
import statechart.DeviceTemp_Component;
import statechart.Network_Component;
import statechart.Power_Component;
import statechart.Sensor_Component;
import statechart.SmartTemplateSimplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartTemplateSimplified_ESTest extends SmartTemplateSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      Actuator_Component actuator_Component0 = new Actuator_Component();
      smartTemplateSimplified0.setActuator(actuator_Component0);
      assertFalse(actuator_Component0.isActive());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      smartTemplateSimplified0.setWiFi((Network_Component) null);
      assertFalse(smartTemplateSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartTemplateSimplified.SensorInput smartTemplateSimplified_SensorInput0 = new SmartTemplateSimplified.SensorInput();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      Sensor_Component sensor_Component0 = new Sensor_Component();
      smartTemplateSimplified0.setSensor(sensor_Component0);
      assertFalse(sensor_Component0.getSignalSentToController());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      Controller_Component controller_Component0 = new Controller_Component();
      smartTemplateSimplified0.setController(controller_Component0);
      assertFalse(controller_Component0.getActivity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      Power_Component power_Component0 = new Power_Component();
      smartTemplateSimplified0.setPower(power_Component0);
      assertEquals(3600L, power_Component0.getTime());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      DeviceTemp_Component deviceTemp_Component0 = new DeviceTemp_Component();
      smartTemplateSimplified0.setTemp(deviceTemp_Component0);
      assertFalse(deviceTemp_Component0.getFully_rested());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartTemplateSimplified.SensorOutput smartTemplateSimplified_SensorOutput0 = new SmartTemplateSimplified.SensorOutput();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State.$NULLSTATE$;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_NETWORKCOMPONENT__INITIALIZE_NETWORK_COMPONENT_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_SENSORCOMPONENT__SENSOR_COMPONENT_ISON_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_CONTROLLERCOMPONENT__CONTROLLER_COMPONENT_ISON_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_TRACKINGDEVICETEMPERATURE_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT___RECEIVING_UPDATES_FROM_DEVICETEMP_COMPONENT___TEMPERATURE_UPDATES_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_POWERCALCULATORCOMPONENT_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT___RECEIVING_UPDATES_FROM_POWER_COMPONENT___POWER_CONSUMPTION_UPDATES_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_NETWORKCOMPONENT_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_NETWORKCOMPONENT__INITIALIZE_NETWORK_COMPONENT___RECEIVING_NETWORK_CONNECTION_UPDATES___NETWORK_COMPONENT_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_SENSORCOMPONENT_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_SENSORCOMPONENT__SENSOR_COMPONENT_ISON___SENSOR_MONITORING___SENSOR_COMPONENT_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_CONTROLLERCOMPONENT_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_CONTROLLERCOMPONENT__CONTROLLER_COMPONENT_ISON___CONTROLLER_RECEIVING_AND_SENDING_UPDATES___CONTROLLER_COMPONENT_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_ACTUATORCOMPONENT__DEVICE_ACTUATED_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_ACTUATORCOMPONENT__ACTUATOR_ONSTANDBY_;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_DEVICESWITCHSTATUS_ON;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_ACTUATORCOMPONENT_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.State smartTemplateSimplified_State0 = SmartTemplateSimplified.State._IOT_TEMPLATE__IOT_TEMPLATE_DEVICESWITCHSTATUS_OFF;
      boolean boolean0 = smartTemplateSimplified0.isStateActive(smartTemplateSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      boolean boolean0 = smartTemplateSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      // Undeclared exception!
      try { 
        smartTemplateSimplified0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.System smartTemplateSimplified_System0 = new SmartTemplateSimplified.System(smartTemplateSimplified0);
      // Undeclared exception!
      try { 
        smartTemplateSimplified_System0.raiseOff();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      // Undeclared exception!
      try { 
        smartTemplateSimplified0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.SensorInput smartTemplateSimplified_SensorInput0 = smartTemplateSimplified0.sensorInput();
      assertNotNull(smartTemplateSimplified_SensorInput0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      smartTemplateSimplified0.exit();
      assertFalse(smartTemplateSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      SmartTemplateSimplified.System smartTemplateSimplified_System0 = smartTemplateSimplified0.system();
      // Undeclared exception!
      try { 
        smartTemplateSimplified_System0.raiseOn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      smartTemplateSimplified0.sensorOutput();
      assertFalse(smartTemplateSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      // Undeclared exception!
      try { 
        smartTemplateSimplified0.raiseTimeEvent((-314));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTemplateSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      smartTemplateSimplified0.setTimerService((ITimerService) null);
      assertFalse(smartTemplateSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartTemplateSimplified smartTemplateSimplified0 = new SmartTemplateSimplified();
      boolean boolean0 = smartTemplateSimplified0.isFinal();
      assertFalse(smartTemplateSimplified0.isActive());
      assertFalse(boolean0);
  }
}
