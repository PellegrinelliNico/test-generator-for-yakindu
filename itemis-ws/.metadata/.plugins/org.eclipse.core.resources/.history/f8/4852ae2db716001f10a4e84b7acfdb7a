/*
 * This file was automatically generated by EvoSuite
 * Mon May 20 07:07:35 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import statechart.DigitalWatchSimplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DigitalWatchSimplified_ESTest extends DigitalWatchSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      digitalWatchSimplified0.raiseTimeEvent(3);
      assertFalse(digitalWatchSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.isStateActive((DigitalWatchSimplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DigitalWatchSimplified.Display digitalWatchSimplified_Display0 = new DigitalWatchSimplified.Display();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.exit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.$NULLSTATE$;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_SETTIME;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_ALARM;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_CLOCK;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.LIGHT_ON;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.LIGHT_OFF;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.CHIME_BEEP;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.CHIME_QUIET;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_RUN_PAUSE;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_RUN_COUNT;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_SETTIME_SET_TIME_HR;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_SETTIME_SET_TIME_SEC;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_ALARM_R1_ALARM_2_BEEPS;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_ALARM_R1_ALARM_1_BEEPS;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_DISPLAY_LAP;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_DISPLAY_REGULAR;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_ZERO;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_SET_CHIME;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_ALARM_2;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_ALARM_1;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_DATE;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_CLOCK_DOUBLE_CLICK_NORMAL;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_SETTIME_SET_TIME_MIN;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.State digitalWatchSimplified_State0 = DigitalWatchSimplified.State.MODES_REGULAR_CLOCK_REGULAR_CLOCK_DOUBLE_CLICK_WAIT;
      boolean boolean0 = digitalWatchSimplified0.isStateActive(digitalWatchSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.Display digitalWatchSimplified_Display0 = digitalWatchSimplified0.display();
      DigitalWatchSimplified.Display.OperationCallback digitalWatchSimplified_Display_OperationCallback0 = mock(DigitalWatchSimplified.Display.OperationCallback.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified_Display0.setOperationCallback(digitalWatchSimplified_Display_OperationCallback0);
      ITimerService iTimerService0 = mock(ITimerService.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified0.setTimerService(iTimerService0);
      digitalWatchSimplified0.runCycle();
      assertFalse(digitalWatchSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      boolean boolean0 = digitalWatchSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      ITimerService iTimerService0 = mock(ITimerService.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified0.setTimerService(iTimerService0);
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Operation callback for interface Display must be set.
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      ITimerService iTimerService0 = mock(ITimerService.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified0.setTimerService(iTimerService0);
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.runCycle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Operation callback for interface Display must be set.
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.runCycle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DigitalWatchSimplified.Button digitalWatchSimplified_Button0 = new DigitalWatchSimplified.Button();
      digitalWatchSimplified_Button0.raiseLight_r();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DigitalWatchSimplified.Button digitalWatchSimplified_Button0 = new DigitalWatchSimplified.Button();
      digitalWatchSimplified_Button0.raiseMode();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DigitalWatchSimplified.Button digitalWatchSimplified_Button0 = new DigitalWatchSimplified.Button();
      digitalWatchSimplified_Button0.raiseLight();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DigitalWatchSimplified.Button digitalWatchSimplified_Button0 = new DigitalWatchSimplified.Button();
      digitalWatchSimplified_Button0.raiseSet();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DigitalWatchSimplified.Button digitalWatchSimplified_Button0 = new DigitalWatchSimplified.Button();
      digitalWatchSimplified_Button0.raiseOnoff();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      // Undeclared exception!
      try { 
        digitalWatchSimplified0.raiseTimeEvent(343);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 343
         //
         verifyException("statechart.DigitalWatchSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      boolean boolean0 = digitalWatchSimplified0.isFinal();
      assertFalse(digitalWatchSimplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      digitalWatchSimplified0.button();
      assertFalse(digitalWatchSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.Display digitalWatchSimplified_Display0 = digitalWatchSimplified0.display();
      DigitalWatchSimplified.Display.OperationCallback digitalWatchSimplified_Display_OperationCallback0 = mock(DigitalWatchSimplified.Display.OperationCallback.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified_Display0.setOperationCallback(digitalWatchSimplified_Display_OperationCallback0);
      ITimerService iTimerService0 = mock(ITimerService.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified0.setTimerService(iTimerService0);
      digitalWatchSimplified0.enter();
      digitalWatchSimplified0.exit();
      assertFalse(digitalWatchSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.Display digitalWatchSimplified_Display0 = digitalWatchSimplified0.display();
      DigitalWatchSimplified.Display.OperationCallback digitalWatchSimplified_Display_OperationCallback0 = mock(DigitalWatchSimplified.Display.OperationCallback.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified_Display0.setOperationCallback(digitalWatchSimplified_Display_OperationCallback0);
      ITimerService iTimerService0 = mock(ITimerService.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified0.setTimerService(iTimerService0);
      digitalWatchSimplified0.enter();
      digitalWatchSimplified0.runCycle();
      assertFalse(digitalWatchSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DigitalWatchSimplified digitalWatchSimplified0 = new DigitalWatchSimplified();
      DigitalWatchSimplified.Display digitalWatchSimplified_Display0 = digitalWatchSimplified0.display();
      DigitalWatchSimplified.Display.OperationCallback digitalWatchSimplified_Display_OperationCallback0 = mock(DigitalWatchSimplified.Display.OperationCallback.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified_Display0.setOperationCallback(digitalWatchSimplified_Display_OperationCallback0);
      ITimerService iTimerService0 = mock(ITimerService.class, new ViolatedAssumptionAnswer());
      digitalWatchSimplified0.setTimerService(iTimerService0);
      assertFalse(digitalWatchSimplified0.isActive());
      
      digitalWatchSimplified0.enter();
      boolean boolean0 = digitalWatchSimplified0.isActive();
      assertTrue(boolean0);
  }
}
