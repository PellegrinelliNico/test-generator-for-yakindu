/*
 * This file was automatically generated by EvoSuite
 * Thu May 09 19:38:40 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.E;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class E_ESTest extends E_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      E e0 = new E();
      e0.setV(793L);
      long long0 = e0.getV();
      assertEquals(793L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      E e0 = new E();
      assertEquals(0L, e0.getV());
      
      e0.setV((-1L));
      long long0 = e0.getV();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      E e0 = new E();
      e0.setStateConfVectorPosition(1L);
      long long0 = e0.getStateConfVectorPosition();
      assertEquals(1L, long0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      E e0 = new E();
      e0.setStateConfVectorPosition((-989L));
      long long0 = e0.getStateConfVectorPosition();
      assertEquals((-989L), long0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      E e0 = new E();
      e0.setIsExecuting(true);
      boolean boolean0 = e0.getIsExecuting();
      assertEquals(0L, e0.getV());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      E e0 = new E();
      boolean boolean0 = e0.getIsExecuting();
      assertFalse(boolean0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      E e0 = new E();
      // Undeclared exception!
      try { 
        e0.isStateActive((E.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.E", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      E e0 = new E();
      E.State e_State0 = E.State.MAIN_REGION_ORTHOGONALSTATE;
      boolean boolean0 = e0.isStateActive(e_State0);
      assertEquals(0L, e0.getV());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      E e0 = new E();
      E.State e_State0 = E.State.MAIN_REGION_ORTHOGONALSTATE_R2_STATEB;
      boolean boolean0 = e0.isStateActive(e_State0);
      assertFalse(boolean0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      E e0 = new E();
      E.State e_State0 = E.State.$NULLSTATE$;
      boolean boolean0 = e0.isStateActive(e_State0);
      assertFalse(boolean0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      E e0 = new E();
      E.State e_State0 = E.State.MAIN_REGION_ORTHOGONALSTATE_R1_STATEA;
      boolean boolean0 = e0.isStateActive(e_State0);
      assertFalse(boolean0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      E e0 = new E();
      boolean boolean0 = e0.nextEvent();
      assertEquals(0L, e0.getV());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      E e0 = new E();
      boolean boolean0 = e0.isActive();
      assertFalse(boolean0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      E e0 = new E();
      // Undeclared exception!
      try { 
        e0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.E", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      E e0 = new E();
      e0.raiseX();
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      E e0 = new E();
      e0.setIsExecuting(true);
      e0.exit();
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      E e0 = new E();
      e0.raiseZ();
      boolean boolean0 = e0.nextEvent();
      assertTrue(boolean0);
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      E e0 = new E();
      e0.getStateConfVectorPosition();
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      E e0 = new E();
      assertFalse(e0.isActive());
      
      e0.exit();
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      E e0 = new E();
      e0.setTimerService((ITimerService) null);
      assertEquals(0L, e0.getV());
      assertFalse(e0.isActive());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      E e0 = new E();
      e0.raiseY();
      assertEquals(0L, e0.getV());
      assertFalse(e0.isActive());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      E e0 = new E();
      boolean boolean0 = e0.isFinal();
      assertEquals(0L, e0.getV());
      assertFalse(boolean0);
      assertFalse(e0.isActive());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      E e0 = new E();
      e0.getX();
      assertEquals(0L, e0.getV());
      assertFalse(e0.isActive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      E e0 = new E();
      e0.getTimerService();
      assertFalse(e0.isActive());
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      E e0 = new E();
      long long0 = e0.getV();
      assertEquals(0L, long0);
      assertFalse(e0.isActive());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      E e0 = new E();
      // Undeclared exception!
      try { 
        e0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.E", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      E e0 = new E();
      e0.getY();
      assertFalse(e0.isActive());
      assertEquals(0L, e0.getV());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      E e0 = new E();
      // Undeclared exception!
      try { 
        e0.raiseTimeEvent(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.E", e);
      }
  }
}
