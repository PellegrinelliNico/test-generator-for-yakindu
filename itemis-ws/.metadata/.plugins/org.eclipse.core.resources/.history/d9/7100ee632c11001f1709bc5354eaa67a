/*
 * This file was automatically generated by EvoSuite
 * Thu May 09 19:02:39 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart._MotorControlSimplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class _MotorControlSimplified_ESTest extends _MotorControlSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(0.5);
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetTargetSpeed(0.5);
      _MotorControlSimplified0.raiseSetActualSpeed(0.0);
      assertFalse(_MotorControlSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed((-1598.057));
      _MotorControlSimplified0.raiseSetActualSpeed(0.0);
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(501.479147);
      _MotorControlSimplified0.raiseSetActualSpeed((-1205.55685332));
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      // Undeclared exception!
      try { 
        _MotorControlSimplified0.isStateActive((_MotorControlSimplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart._MotorControlSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(0.0);
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed((-1.0));
      _MotorControlSimplified0.raiseSetActualSpeed((-1560.105975));
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed((-1.0));
      _MotorControlSimplified0.triggerWithoutEvent();
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(2127.74678810483);
      _MotorControlSimplified0.raiseSetActualSpeed(0.0);
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.exit();
      assertFalse(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetTargetSpeed((-652.38));
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R2_DEFAULT;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertTrue(_MotorControlSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R1_CRUISING;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertTrue(_MotorControlSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R1_ACCELERATING;
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed((-1923.04904860285));
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(1.0);
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R1_BREAKING;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertTrue(_MotorControlSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertTrue(_MotorControlSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.$NULLSTATE$;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R1_CRUISING;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R1_ACCELERATING;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R2_DEFAULT;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified.State _MotorControlSimplified_State0 = _MotorControlSimplified.State.MOTORCONTROL_MOTORCONTROL_R1_BREAKING;
      boolean boolean0 = _MotorControlSimplified0.isStateActive(_MotorControlSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(1798.4376910911);
      _MotorControlSimplified0.triggerWithoutEvent();
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      boolean boolean0 = _MotorControlSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      assertFalse(_MotorControlSimplified0.isActive());
      
      _MotorControlSimplified0.enter();
      boolean boolean0 = _MotorControlSimplified0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed((-625.4344161487577));
      _MotorControlSimplified0.raiseSetActualSpeed(3691.8658072575126);
      assertTrue(_MotorControlSimplified0.isActive());
      
      _MotorControlSimplified0.exit();
      assertFalse(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(1798.4376910911);
      assertTrue(_MotorControlSimplified0.isActive());
      
      _MotorControlSimplified0.exit();
      assertFalse(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.raiseSetTargetSpeed(1798.4376910911);
      assertFalse(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      assertFalse(_MotorControlSimplified0.isActive());
      
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed(2552.27154834443);
      _MotorControlSimplified0.raiseSetActualSpeed(2552.27154834443);
      assertTrue(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      boolean boolean0 = _MotorControlSimplified0.isFinal();
      assertFalse(boolean0);
      assertFalse(_MotorControlSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      _MotorControlSimplified _MotorControlSimplified0 = new _MotorControlSimplified();
      _MotorControlSimplified0.enter();
      _MotorControlSimplified0.raiseSetActualSpeed((-1923.04904860285));
      assertTrue(_MotorControlSimplified0.isActive());
      
      _MotorControlSimplified0.exit();
      assertFalse(_MotorControlSimplified0.isActive());
  }
}
