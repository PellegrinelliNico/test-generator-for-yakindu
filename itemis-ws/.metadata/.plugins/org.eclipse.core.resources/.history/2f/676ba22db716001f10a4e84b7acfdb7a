/*
 * This file was automatically generated by EvoSuite
 * Mon May 20 07:15:15 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.EventBuffersEnabled;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EventBuffersEnabled_ESTest extends EventBuffersEnabled_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      long long0 = eventBuffersEnabled0.getStateConfVectorPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      long long0 = eventBuffersEnabled0.getStateConfVectorPosition();
      assertTrue(eventBuffersEnabled0.isActive());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.setStateConfVectorPosition((-1L));
      long long0 = eventBuffersEnabled0.getStateConfVectorPosition();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.setIsExecuting(true);
      boolean boolean0 = eventBuffersEnabled0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      boolean boolean0 = eventBuffersEnabled0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      // Undeclared exception!
      try { 
        eventBuffersEnabled0.isStateActive((EventBuffersEnabled.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.EventBuffersEnabled", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.raiseL1();
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.runCycle();
      eventBuffersEnabled0.raiseF();
      eventBuffersEnabled0.runCycle();
      assertTrue(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.raiseL2();
      eventBuffersEnabled0.runCycle();
      eventBuffersEnabled0.runCycle();
      assertTrue(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.raiseL2();
      eventBuffersEnabled0.runCycle();
      assertTrue(eventBuffersEnabled0.isActive());
      
      eventBuffersEnabled0.exit();
      assertFalse(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.exit();
      assertFalse(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R2_C;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertTrue(eventBuffersEnabled0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.raiseL2();
      eventBuffersEnabled0.runCycle();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R1_B;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertTrue(eventBuffersEnabled0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R1_A;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertTrue(eventBuffersEnabled0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.$NULLSTATE$;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R2_D;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R1_B;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R2_C;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R1_A;
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.raiseL1();
      eventBuffersEnabled0.runCycle();
      eventBuffersEnabled0.runCycle();
      assertTrue(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.runCycle();
      assertFalse(eventBuffersEnabled0.isFinal());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      boolean boolean0 = eventBuffersEnabled0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      assertFalse(eventBuffersEnabled0.isActive());
      
      eventBuffersEnabled0.enter();
      boolean boolean0 = eventBuffersEnabled0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.setIsExecuting(true);
      eventBuffersEnabled0.exit();
      assertFalse(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.setIsExecuting(true);
      eventBuffersEnabled0.enter();
      assertFalse(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.setIsExecuting(true);
      eventBuffersEnabled0.runCycle();
      assertFalse(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.raiseE();
      assertFalse(eventBuffersEnabled0.isActive());
      
      eventBuffersEnabled0.enter();
      EventBuffersEnabled.State eventBuffersEnabled_State0 = EventBuffersEnabled.State.R2_D;
      eventBuffersEnabled0.runCycle();
      boolean boolean0 = eventBuffersEnabled0.isStateActive(eventBuffersEnabled_State0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      boolean boolean0 = eventBuffersEnabled0.isFinal();
      assertFalse(eventBuffersEnabled0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      assertFalse(eventBuffersEnabled0.isActive());
      
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.raiseL2();
      eventBuffersEnabled0.runCycle();
      eventBuffersEnabled0.raiseE();
      eventBuffersEnabled0.runCycle();
      assertTrue(eventBuffersEnabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EventBuffersEnabled eventBuffersEnabled0 = new EventBuffersEnabled();
      eventBuffersEnabled0.enter();
      eventBuffersEnabled0.raiseL1();
      eventBuffersEnabled0.runCycle();
      assertTrue(eventBuffersEnabled0.isActive());
      
      eventBuffersEnabled0.exit();
      assertFalse(eventBuffersEnabled0.isActive());
  }
}
