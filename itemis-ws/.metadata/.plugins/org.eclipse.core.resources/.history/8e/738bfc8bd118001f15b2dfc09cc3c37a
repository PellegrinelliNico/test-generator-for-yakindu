/*
 * This file was automatically generated by EvoSuite
 * Tue May 21 07:16:47 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.Hub_PowerManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Hub_PowerManager_ESTest extends Hub_PowerManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setTotal(1557L);
      long long0 = hub_PowerManager0.getTotal();
      assertEquals(1557L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setThreshold(29L);
      long long0 = hub_PowerManager0.getThreshold();
      assertEquals(29L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setThreshold((-1052L));
      long long0 = hub_PowerManager0.getThreshold();
      assertEquals((-1052L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setSystem_index_to_turnoff(29L);
      long long0 = hub_PowerManager0.getSystem_index_to_turnoff();
      assertEquals(29L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setPrevious_device_index(500L);
      long long0 = hub_PowerManager0.getPrevious_device_index();
      assertEquals(500L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setPrevious_device_index((-796L));
      long long0 = hub_PowerManager0.getPrevious_device_index();
      assertEquals((-796L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setPrev_last_value(237L);
      long long0 = hub_PowerManager0.getPrev_last_value();
      assertEquals(237L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setPrev_last_value((-3669L));
      long long0 = hub_PowerManager0.getPrev_last_value();
      assertEquals((-3669L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      assertEquals(0L, hub_PowerManager0.getLast_value());
      
      hub_PowerManager0.setLast_value(1L);
      long long0 = hub_PowerManager0.getLast_value();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setLast_value((-16L));
      long long0 = hub_PowerManager0.getLast_value();
      assertEquals((-16L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setIsExecuting(true);
      boolean boolean0 = hub_PowerManager0.getIsExecuting();
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertTrue(boolean0);
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      boolean boolean0 = hub_PowerManager0.getIsExecuting();
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setDevice_index(2349L);
      long long0 = hub_PowerManager0.getDevice_index();
      assertEquals(2349L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setDevice_index((-408L));
      long long0 = hub_PowerManager0.getDevice_index();
      assertEquals((-408L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      // Undeclared exception!
      try { 
        hub_PowerManager0.isStateActive((Hub_PowerManager.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.Hub_PowerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setTotal((-220L));
      long long0 = hub_PowerManager0.getTotal();
      assertEquals((-220L), long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      assertFalse(hub_PowerManager0.getOver_threshold());
      
      hub_PowerManager0.setOver_threshold(true);
      boolean boolean0 = hub_PowerManager0.getOver_threshold();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      Hub_PowerManager.State hub_PowerManager_State0 = Hub_PowerManager.State._HUB_POWERMANAGER__THRESHOLD_REACHED;
      boolean boolean0 = hub_PowerManager0.isStateActive(hub_PowerManager_State0);
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      Hub_PowerManager.State hub_PowerManager_State0 = Hub_PowerManager.State._HUB_POWERMANAGER__DOUBLE_CHECK;
      boolean boolean0 = hub_PowerManager0.isStateActive(hub_PowerManager_State0);
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      Hub_PowerManager.State hub_PowerManager_State0 = Hub_PowerManager.State._HUB_POWERMANAGER__THRESHOLD_REACHED__RETURN_DEVICEINDEX_TO_BE_TURNEDOFF__INITIALIZE_LAST_VALUE;
      boolean boolean0 = hub_PowerManager0.isStateActive(hub_PowerManager_State0);
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      Hub_PowerManager.State hub_PowerManager_State0 = Hub_PowerManager.State.valueOf("$NULLSTATE$");
      boolean boolean0 = hub_PowerManager0.isStateActive(hub_PowerManager_State0);
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getTotal());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      Hub_PowerManager.State hub_PowerManager_State0 = Hub_PowerManager.State._HUB_POWERMANAGER__MONITORING_POWER_CONSUMPTION;
      boolean boolean0 = hub_PowerManager0.isStateActive(hub_PowerManager_State0);
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      boolean boolean0 = hub_PowerManager0.nextEvent();
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      boolean boolean0 = hub_PowerManager0.isActive();
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getDevice_index());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setIsExecuting(true);
      hub_PowerManager0.exit();
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      // Undeclared exception!
      try { 
        hub_PowerManager0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Hub_PowerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getPrevious_device_index();
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, long0);
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getTotal());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      assertFalse(hub_PowerManager0.isActive());
      
      hub_PowerManager0.exit();
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getLast_value());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getSystem_index_to_turnoff();
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getTotal();
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, long0);
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getThreshold());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.setTimerService((ITimerService) null);
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      // Undeclared exception!
      try { 
        hub_PowerManager0.raiseTimeEvent(5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Hub_PowerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      // Undeclared exception!
      try { 
        hub_PowerManager0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Hub_PowerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      // Undeclared exception!
      try { 
        hub_PowerManager0.raiseThreshold_reached();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Hub_PowerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getDevice_index();
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, long0);
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getTotal());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getLast_value();
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, long0);
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hub_PowerManager0.getTimerService();
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getPrev_last_value();
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, long0);
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      long long0 = hub_PowerManager0.getThreshold();
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, long0);
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(hub_PowerManager0.isActive());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      boolean boolean0 = hub_PowerManager0.isFinal();
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertFalse(hub_PowerManager0.getOver_threshold());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getLast_value());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      boolean boolean0 = hub_PowerManager0.getOver_threshold();
      assertFalse(boolean0);
      assertEquals(0L, hub_PowerManager0.getTotal());
      assertEquals(0L, hub_PowerManager0.getThreshold());
      assertEquals(0L, hub_PowerManager0.getPrev_last_value());
      assertFalse(hub_PowerManager0.isActive());
      assertEquals(0L, hub_PowerManager0.getDevice_index());
      assertEquals(0L, hub_PowerManager0.getSystem_index_to_turnoff());
      assertEquals(0L, hub_PowerManager0.getPrevious_device_index());
      assertEquals(0L, hub_PowerManager0.getLast_value());
  }
}
