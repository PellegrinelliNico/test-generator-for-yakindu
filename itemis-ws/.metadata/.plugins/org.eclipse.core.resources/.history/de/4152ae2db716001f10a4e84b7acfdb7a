/*
 * This file was automatically generated by EvoSuite
 * Mon May 20 06:01:53 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart._led;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class _led_ESTest extends _led_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      _led _led0 = new _led();
      _led0.setIsExecuting(true);
      _led0.raiseOn();
      boolean boolean0 = _led0.nextEvent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      _led _led0 = new _led();
      boolean boolean0 = _led0.nextEvent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      _led _led0 = new _led();
      _led0.setIsExecuting(true);
      boolean boolean0 = _led0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      _led _led0 = new _led();
      boolean boolean0 = _led0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      _led _led0 = new _led();
      // Undeclared exception!
      try { 
        _led0.isStateActive((_led.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart._led", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      _led _led0 = new _led();
      _led0.setIsExecuting(true);
      _led0.raiseOff();
      assertFalse(_led0.isFinal());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      _led _led0 = new _led();
      _led0.enter();
      _led0.raiseOn();
      _led0.triggerWithoutEvent();
      assertTrue(_led0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      _led _led0 = new _led();
      _led0.enter();
      _led0.raiseOn();
      assertTrue(_led0.isActive());
      
      _led0.exit();
      assertFalse(_led0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      _led _led0 = new _led();
      _led0.enter();
      assertTrue(_led0.isActive());
      
      _led0.exit();
      assertFalse(_led0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      _led _led0 = new _led();
      _led0.enter();
      _led.State _led_State0 = _led.State.MAIN_REGION_ON;
      _led0.raiseOn();
      boolean boolean0 = _led0.isStateActive(_led_State0);
      assertTrue(_led0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      _led _led0 = new _led();
      _led.State _led_State0 = _led.State.MAIN_REGION_OFF;
      _led0.enter();
      boolean boolean0 = _led0.isStateActive(_led_State0);
      assertTrue(_led0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      _led _led0 = new _led();
      _led.State _led_State0 = _led.State.$NULLSTATE$;
      boolean boolean0 = _led0.isStateActive(_led_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      _led _led0 = new _led();
      _led.State _led_State0 = _led.State.MAIN_REGION_ON;
      boolean boolean0 = _led0.isStateActive(_led_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      _led _led0 = new _led();
      _led.State _led_State0 = _led.State.MAIN_REGION_OFF;
      boolean boolean0 = _led0.isStateActive(_led_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      _led _led0 = new _led();
      _led0.enter();
      boolean boolean0 = _led0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      _led _led0 = new _led();
      boolean boolean0 = _led0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      _led _led0 = new _led();
      _led0.setIsExecuting(true);
      _led0.exit();
      assertFalse(_led0.isFinal());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      _led _led0 = new _led();
      _led0.exit();
      assertFalse(_led0.isActive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      _led _led0 = new _led();
      _led0.setIsExecuting(true);
      _led0.enter();
      assertFalse(_led0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      _led _led0 = new _led();
      boolean boolean0 = _led0.isFinal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      _led _led0 = new _led();
      _led0.triggerWithoutEvent();
      assertFalse(_led0.isFinal());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      _led _led0 = new _led();
      assertFalse(_led0.isActive());
      
      _led0.enter();
      _led0.raiseOff();
      assertTrue(_led0.isActive());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      _led _led0 = new _led();
      _led0.setIsExecuting(true);
      _led0.raiseOn();
      _led0.setIsExecuting(false);
      assertFalse(_led0.isActive());
      
      _led0.enter();
      _led0.raiseOff();
      assertTrue(_led0.isActive());
  }
}
