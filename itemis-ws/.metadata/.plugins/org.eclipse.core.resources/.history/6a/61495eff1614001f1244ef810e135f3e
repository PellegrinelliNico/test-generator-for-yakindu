/*
 * This file was automatically generated by EvoSuite
 * Thu May 16 21:02:39 GMT 2024
 */

package statechart2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.Test_converter_entry_exit_actions;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Test_converter_entry_exit_actions_ESTest extends Test_converter_entry_exit_actions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      test_converter_entry_exit_actions0.sensor = null;
      Test_converter_entry_exit_actions.Sensor test_converter_entry_exit_actions_Sensor0 = test_converter_entry_exit_actions0.sensor();
      assertNull(test_converter_entry_exit_actions_Sensor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      test_converter_entry_exit_actions0.setIsExecuting(true);
      boolean boolean0 = test_converter_entry_exit_actions0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      boolean boolean0 = test_converter_entry_exit_actions0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions0.isStateActive((Test_converter_entry_exit_actions.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.User test_converter_entry_exit_actions_User0 = test_converter_entry_exit_actions0.user;
      assertEquals(0L, test_converter_entry_exit_actions_User0.getBrightness());
      
      test_converter_entry_exit_actions_User0.setBrightness(1L);
      Test_converter_entry_exit_actions.User test_converter_entry_exit_actions_User1 = test_converter_entry_exit_actions0.user();
      assertEquals(1L, test_converter_entry_exit_actions_User1.getBrightness());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.User test_converter_entry_exit_actions_User0 = new Test_converter_entry_exit_actions.User(test_converter_entry_exit_actions0);
      assertEquals(0L, test_converter_entry_exit_actions_User0.getBrightness());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.State test_converter_entry_exit_actions_State0 = Test_converter_entry_exit_actions.State.$NULLSTATE$;
      boolean boolean0 = test_converter_entry_exit_actions0.isStateActive(test_converter_entry_exit_actions_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.State test_converter_entry_exit_actions_State0 = Test_converter_entry_exit_actions.State.MAIN_REGION_MOTIONSENSING;
      boolean boolean0 = test_converter_entry_exit_actions0.isStateActive(test_converter_entry_exit_actions_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.State test_converter_entry_exit_actions_State0 = Test_converter_entry_exit_actions.State.MAIN_REGION_HELLO;
      boolean boolean0 = test_converter_entry_exit_actions0.isStateActive(test_converter_entry_exit_actions_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.State test_converter_entry_exit_actions_State0 = Test_converter_entry_exit_actions.State.MAIN_REGION_MOTIONSENSING_R1_ON;
      boolean boolean0 = test_converter_entry_exit_actions0.isStateActive(test_converter_entry_exit_actions_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.State test_converter_entry_exit_actions_State0 = Test_converter_entry_exit_actions.State.MAIN_REGION_MANUAL;
      boolean boolean0 = test_converter_entry_exit_actions0.isStateActive(test_converter_entry_exit_actions_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.State test_converter_entry_exit_actions_State0 = Test_converter_entry_exit_actions.State.MAIN_REGION_MOTIONSENSING_R1_OFF;
      boolean boolean0 = test_converter_entry_exit_actions0.isStateActive(test_converter_entry_exit_actions_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      boolean boolean0 = test_converter_entry_exit_actions0.nextEvent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      boolean boolean0 = test_converter_entry_exit_actions0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.User test_converter_entry_exit_actions_User0 = test_converter_entry_exit_actions0.user;
      long long0 = test_converter_entry_exit_actions_User0.getBrightness();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.User test_converter_entry_exit_actions_User0 = test_converter_entry_exit_actions0.user;
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions_User0.raiseOn_button();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      ITimerService iTimerService0 = test_converter_entry_exit_actions0.getTimerService();
      assertNull(iTimerService0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.User test_converter_entry_exit_actions_User0 = test_converter_entry_exit_actions0.user();
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions_User0.raiseOff_button();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      test_converter_entry_exit_actions0.setIsExecuting(true);
      test_converter_entry_exit_actions0.exit();
      assertFalse(test_converter_entry_exit_actions0.isFinal());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      test_converter_entry_exit_actions0.exit();
      assertFalse(test_converter_entry_exit_actions0.isFinal());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      boolean boolean0 = test_converter_entry_exit_actions0.isFinal();
      assertFalse(boolean0);
      assertFalse(test_converter_entry_exit_actions0.isActive());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      test_converter_entry_exit_actions0.setTimerService((ITimerService) null);
      assertFalse(test_converter_entry_exit_actions0.isActive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      test_converter_entry_exit_actions0.sensor();
      assertFalse(test_converter_entry_exit_actions0.isActive());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions0.raiseTimeEvent((-1392));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Test_converter_entry_exit_actions test_converter_entry_exit_actions0 = new Test_converter_entry_exit_actions();
      Test_converter_entry_exit_actions.Sensor test_converter_entry_exit_actions_Sensor0 = new Test_converter_entry_exit_actions.Sensor(test_converter_entry_exit_actions0);
      // Undeclared exception!
      try { 
        test_converter_entry_exit_actions_Sensor0.raiseMotion();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Test_converter_entry_exit_actions", e);
      }
  }
}
