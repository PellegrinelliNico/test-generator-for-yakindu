/*
 * This file was automatically generated by EvoSuite
 * Tue May 21 07:35:48 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.HubTemplate;
import statechart.Hub_PowerManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HubTemplate_ESTest extends HubTemplate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.Power hubTemplate_Power0 = hubTemplate0.power();
      hubTemplate_Power0.setTotal((-1254L));
      assertEquals((-1254L), hubTemplate_Power0.getTotal());
      
      HubTemplate.Power hubTemplate_Power1 = hubTemplate0.power();
      assertFalse(hubTemplate_Power1.getThresholdReached());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.Power hubTemplate_Power0 = hubTemplate0.power();
      hubTemplate_Power0.setThreshold((-1882L));
      assertEquals((-1882L), hubTemplate_Power0.getThreshold());
      
      HubTemplate.Power hubTemplate_Power1 = hubTemplate0.power();
      assertEquals(0L, hubTemplate_Power1.getIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.Power hubTemplate_Power0 = hubTemplate0.power();
      hubTemplate_Power0.setIndex((-275L));
      assertEquals((-275L), hubTemplate_Power0.getIndex());
      
      HubTemplate.Power hubTemplate_Power1 = hubTemplate0.power();
      assertEquals((-275L), hubTemplate_Power1.getIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.setTotalSystemsON((-3107L));
      long long0 = hubTemplate0.getTotalSystemsON();
      assertEquals((-3107L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.setStateConfVectorPosition((-733L));
      long long0 = hubTemplate0.getStateConfVectorPosition();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertEquals((-733L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.getIsExecuting();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.setTotalSystemsON(1404L);
      long long0 = hubTemplate0.getTotalSystemsON();
      assertEquals(1404L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      Hub_PowerManager hub_PowerManager0 = new Hub_PowerManager();
      hubTemplate0.setPowerManager(hub_PowerManager0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = new HubTemplate.HUB(hubTemplate0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.Power hubTemplate_Power0 = hubTemplate0.power;
      hubTemplate_Power0.setThresholdReached(false);
      assertEquals(0L, hubTemplate_Power0.getIndex());
      assertEquals(90L, hubTemplate_Power0.getThreshold());
      assertFalse(hubTemplate_Power0.getThresholdReached());
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertEquals(0L, hubTemplate_Power0.getTotal());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State.$NULLSTATE$;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER;
      boolean boolean0 = hubTemplate0.isStateActive(hubTemplate_State0);
      assertFalse(boolean0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS;
      boolean boolean0 = hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE;
      boolean boolean0 = hubTemplate0.isStateActive(hubTemplate_State0);
      assertFalse(boolean0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SYSTEM2REGION_SYSTEM2_STATUS;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SYSTEM1REGION_SYSTEM1_STATUS;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_NETWORKREGION_CONNECTED;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_NETWORKREGION_NO_CONNECTION;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_SYSTEM1;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_SYSTEM2OFF;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_SYSTEM2ON;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_SYSTEM1OFF;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_SYSTEM1ON;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF;
      boolean boolean0 = hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBTEMPLATE_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_SYSTEM2;
      hubTemplate0.isStateActive(hubTemplate_State0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.State hubTemplate_State0 = HubTemplate.State._HUB_TEMPLATE__HUBOFF;
      boolean boolean0 = hubTemplate0.isStateActive(hubTemplate_State0);
      assertFalse(boolean0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      boolean boolean0 = hubTemplate0.nextEvent();
      assertFalse(boolean0);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      boolean boolean0 = hubTemplate0.isActive();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      // Undeclared exception!
      try { 
        hubTemplate0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System1 hubTemplate_System1_0 = hubTemplate0.system1();
      // Undeclared exception!
      try { 
        hubTemplate_System1_0.raiseToggle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System1 hubTemplate_System1_0 = hubTemplate0.system1;
      hubTemplate_System1_0.getIsON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System1 hubTemplate_System1_0 = new HubTemplate.System1(hubTemplate0);
      hubTemplate_System1_0.raiseIsOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System1 hubTemplate_System1_0 = hubTemplate0.system1;
      hubTemplate_System1_0.getIsOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System2 hubTemplate_System2_0 = hubTemplate0.system2();
      hubTemplate_System2_0.getIsOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      // Undeclared exception!
      try { 
        hubTemplate0.system2.raiseToggle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.system2.raiseIsON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System2 hubTemplate_System2_0 = new HubTemplate.System2(hubTemplate0);
      hubTemplate_System2_0.raiseIsOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = hubTemplate0.hUB();
      hubTemplate_HUB0.getAllSystemsOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = hubTemplate0.hUB();
      // Undeclared exception!
      try { 
        hubTemplate_HUB0.raiseTurnOFFSystems();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = hubTemplate0.hUB;
      // Undeclared exception!
      try { 
        hubTemplate_HUB0.raiseTurnONSystems();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = hubTemplate0.hUB;
      hubTemplate_HUB0.raiseAllSystemsOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = hubTemplate0.hUB;
      hubTemplate_HUB0.getAllSystemsON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      // Undeclared exception!
      try { 
        hubTemplate0.network.raiseConnect();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.Network hubTemplate_Network0 = new HubTemplate.Network(hubTemplate0);
      // Undeclared exception!
      try { 
        hubTemplate_Network0.raiseError();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      // Undeclared exception!
      try { 
        hubTemplate0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.getHubOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      boolean boolean0 = hubTemplate0.isFinal();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.network();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.getHubON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.raiseHubON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      // Undeclared exception!
      try { 
        hubTemplate0.raiseToggle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.HUB hubTemplate_HUB0 = hubTemplate0.hUB();
      hubTemplate_HUB0.raiseAllSystemsON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      assertFalse(hubTemplate0.isActive());
      
      hubTemplate0.exit();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.getStateConfVectorPosition();
      assertFalse(hubTemplate0.isActive());
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.getPowerManager();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(hubTemplate0.isActive());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.raiseHubOFF();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(hubTemplate0.isActive());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System1 hubTemplate_System1_0 = hubTemplate0.system1();
      hubTemplate_System1_0.raiseIsON();
      assertFalse(hubTemplate0.isActive());
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      // Undeclared exception!
      try { 
        hubTemplate0.raiseTimeEvent(1937);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.HubTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.getTimerService();
      assertFalse(hubTemplate0.isActive());
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      long long0 = hubTemplate0.getTotalSystemsON();
      assertFalse(hubTemplate0.isActive());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.System2 hubTemplate_System2_0 = hubTemplate0.system2();
      hubTemplate_System2_0.getIsON();
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(hubTemplate0.isActive());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.setIsExecuting(false);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(hubTemplate0.isActive());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      hubTemplate0.setTimerService((ITimerService) null);
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertFalse(hubTemplate0.isActive());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HubTemplate.Power hubTemplate_Power0 = new HubTemplate.Power();
      long long0 = hubTemplate_Power0.getThreshold();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HubTemplate hubTemplate0 = new HubTemplate();
      HubTemplate.Power hubTemplate_Power0 = hubTemplate0.power();
      long long0 = hubTemplate_Power0.getTotal();
      assertEquals(0L, hubTemplate_Power0.getIndex());
      assertEquals(0L, long0);
      assertFalse(hubTemplate0.isActive());
      assertFalse(hubTemplate_Power0.getThresholdReached());
      assertEquals(0L, hubTemplate0.getTotalSystemsON());
      assertEquals(90L, hubTemplate_Power0.getThreshold());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HubTemplate.Power hubTemplate_Power0 = new HubTemplate.Power();
      boolean boolean0 = hubTemplate_Power0.getThresholdReached();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HubTemplate.Power hubTemplate_Power0 = new HubTemplate.Power();
      long long0 = hubTemplate_Power0.getIndex();
      assertEquals(0L, long0);
  }
}
