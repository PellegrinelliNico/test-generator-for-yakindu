/*
 * This file was automatically generated by EvoSuite
 * Mon May 20 07:06:02 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import statechart.DigitalWatch;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DigitalWatch_ESTest extends DigitalWatch_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setChime_enabled(false);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setAlarm_2_enabled(false);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setTime_set(864000L);
      long long0 = digitalWatch0.getTime_set();
      assertFalse(digitalWatch0.isActive());
      assertEquals(864000L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setTime_set((-3135L));
      long long0 = digitalWatch0.getTime_set();
      assertEquals((-3135L), long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setTime(36000L);
      long long0 = digitalWatch0.getTime();
      assertEquals(36000L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setTime((-2085L));
      long long0 = digitalWatch0.getTime();
      assertFalse(digitalWatch0.isActive());
      assertEquals((-2085L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setStop_time(2000L);
      long long0 = digitalWatch0.getStop_time();
      assertEquals(2000L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setStop_lap_time(24L);
      long long0 = digitalWatch0.getStop_lap_time();
      assertEquals(24L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setStop_lap_time((-295L));
      long long0 = digitalWatch0.getStop_lap_time();
      assertEquals((-295L), long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setStop_display_time(1965L);
      long long0 = digitalWatch0.getStop_display_time();
      assertEquals(1965L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setStop_display_time((-2130L));
      long long0 = digitalWatch0.getStop_display_time();
      assertEquals((-2130L), long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setIsExecuting(true);
      digitalWatch0.getIsExecuting();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getIsExecuting();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setAlarm_2_time(3818L);
      long long0 = digitalWatch0.getAlarm_2_time();
      assertEquals(3818L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setAlarm_1_time(100L);
      long long0 = digitalWatch0.getAlarm_1_time();
      assertEquals(100L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setAlarm_1_time((-1L));
      long long0 = digitalWatch0.getAlarm_1_time();
      assertFalse(digitalWatch0.isActive());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setAlarm_1_enabled(true);
      boolean boolean0 = digitalWatch0.getAlarm_1_enabled();
      assertFalse(digitalWatch0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display();
      digitalWatch_Display0.setSecond(60L);
      assertEquals(60L, digitalWatch_Display0.getSecond());
      
      DigitalWatch.Display digitalWatch_Display1 = digitalWatch0.display();
      assertEquals(0L, digitalWatch_Display1.getFirst());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display;
      digitalWatch_Display0.setSecond((-2728L));
      assertEquals((-2728L), digitalWatch_Display0.getSecond());
      
      DigitalWatch.Display digitalWatch_Display1 = digitalWatch0.display();
      assertEquals(0L, digitalWatch_Display1.getThird());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = new DigitalWatch.Display();
      digitalWatch0.display = digitalWatch_Display0;
      digitalWatch_Display0.setFirst(12L);
      assertEquals(12L, digitalWatch_Display0.getFirst());
      
      DigitalWatch.Display digitalWatch_Display1 = digitalWatch0.display();
      assertEquals(12L, digitalWatch_Display1.getFirst());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = new DigitalWatch.Display();
      digitalWatch0.display = digitalWatch_Display0;
      digitalWatch_Display0.setFirst((-1714L));
      digitalWatch0.display();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      // Undeclared exception!
      try { 
        digitalWatch0.raiseTimeEvent(579);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 579
         //
         verifyException("statechart.DigitalWatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display();
      digitalWatch_Display0.setThird(100L);
      assertEquals(100L, digitalWatch_Display0.getThird());
      
      DigitalWatch.Display digitalWatch_Display1 = digitalWatch0.display();
      assertEquals(0L, digitalWatch_Display1.getFirst());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display();
      digitalWatch_Display0.setText((String) null);
      assertEquals(0L, digitalWatch_Display0.getFirst());
      assertEquals(0L, digitalWatch_Display0.getSecond());
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, digitalWatch_Display0.getThird());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DigitalWatch.Button digitalWatch_Button0 = new DigitalWatch.Button();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.$NULLSTATE$;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_ALARM;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_CLOCK;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.LIGHT_ON;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.LIGHT_OFF;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.CHIME_BEEP;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.CHIME_QUIET;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_RUN_COUNT;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_SETTIME_SET_TIME_HR;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_SETTIME_SET_TIME_MIN;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_ALARM_R1_ALARM_2_BEEPS;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_ALARM_R1_ALARM_1_BEEPS;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_DISPLAY_LAP;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_OPERATION_DISPLAY_REGULAR;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_STOP_WATCH_STOPWATCH_ZERO;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_SET_CHIME;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_ALARM_2;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_ALARM_1;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_DATE;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_CLOCK_DOUBLE_CLICK_NORMAL;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_SETTIME;
      digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.State digitalWatch_State0 = DigitalWatch.State.MODES_REGULAR_CLOCK_REGULAR_CLOCK_DOUBLE_CLICK_WAIT;
      boolean boolean0 = digitalWatch0.isStateActive(digitalWatch_State0);
      assertFalse(digitalWatch0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      boolean boolean0 = digitalWatch0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setIsExecuting(true);
      digitalWatch0.exit();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      // Undeclared exception!
      try { 
        digitalWatch0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.DigitalWatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      // Undeclared exception!
      try { 
        digitalWatch0.runCycle();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.DigitalWatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getTime_set();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setStateConfVectorPosition((-856L));
      long long0 = digitalWatch0.getStateConfVectorPosition();
      assertEquals((-856L), long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      boolean boolean0 = digitalWatch0.getAlarm_1_enabled();
      assertFalse(digitalWatch0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getStop_lap_time();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      long long0 = digitalWatch0.getTime();
      assertEquals(0L, long0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      boolean boolean0 = digitalWatch0.getChime_enabled();
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.setTimerService((ITimerService) null);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      boolean boolean0 = digitalWatch0.isFinal();
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getStateConfVectorPosition();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getStop_display_time();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      long long0 = digitalWatch0.getAlarm_1_time();
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      // Undeclared exception!
      try { 
        digitalWatch0.exit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.DigitalWatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getAlarm_2_time();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getStop_time();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.raiseTimeEvent(0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      boolean boolean0 = digitalWatch0.getAlarm_2_enabled();
      assertFalse(boolean0);
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.getTimerService();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      digitalWatch0.button();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Button digitalWatch_Button0 = digitalWatch0.button;
      digitalWatch_Button0.raiseOnoff();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Button digitalWatch_Button0 = digitalWatch0.button;
      digitalWatch_Button0.raiseLight_r();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Button digitalWatch_Button0 = digitalWatch0.button;
      digitalWatch_Button0.raiseMode();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Button digitalWatch_Button0 = digitalWatch0.button;
      digitalWatch_Button0.raiseLight();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Button digitalWatch_Button0 = digitalWatch0.button;
      digitalWatch_Button0.raiseSet();
      assertFalse(digitalWatch0.isActive());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display;
      DigitalWatch.Display.OperationCallback digitalWatch_Display_OperationCallback0 = mock(DigitalWatch.Display.OperationCallback.class, new ViolatedAssumptionAnswer());
      digitalWatch_Display0.setOperationCallback(digitalWatch_Display_OperationCallback0);
      assertEquals(0L, digitalWatch_Display0.getFirst());
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, digitalWatch_Display0.getSecond());
      assertEquals(0L, digitalWatch_Display0.getThird());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display;
      long long0 = digitalWatch_Display0.getThird();
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, long0);
      assertEquals(0L, digitalWatch_Display0.getFirst());
      assertEquals(0L, digitalWatch_Display0.getSecond());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display();
      digitalWatch_Display0.getText();
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, digitalWatch_Display0.getThird());
      assertEquals(0L, digitalWatch_Display0.getSecond());
      assertEquals(0L, digitalWatch_Display0.getFirst());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display();
      long long0 = digitalWatch_Display0.getFirst();
      assertEquals(0L, long0);
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, digitalWatch_Display0.getSecond());
      assertEquals(0L, digitalWatch_Display0.getThird());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DigitalWatch digitalWatch0 = new DigitalWatch();
      DigitalWatch.Display digitalWatch_Display0 = digitalWatch0.display;
      long long0 = digitalWatch_Display0.getSecond();
      assertFalse(digitalWatch0.isActive());
      assertEquals(0L, long0);
      assertEquals(0L, digitalWatch_Display0.getThird());
      assertEquals(0L, digitalWatch_Display0.getFirst());
  }
}
