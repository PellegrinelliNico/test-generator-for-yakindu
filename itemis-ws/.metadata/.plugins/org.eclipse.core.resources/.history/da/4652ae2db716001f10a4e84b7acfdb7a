/*
 * This file was automatically generated by EvoSuite
 * Mon May 20 07:11:45 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.EventBuffersDisabled;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EventBuffersDisabled_ESTest extends EventBuffersDisabled_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      long long0 = eventBuffersDisabled0.getStateConfVectorPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.enter();
      long long0 = eventBuffersDisabled0.getStateConfVectorPosition();
      assertTrue(eventBuffersDisabled0.isActive());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.setStateConfVectorPosition((-1498L));
      long long0 = eventBuffersDisabled0.getStateConfVectorPosition();
      assertEquals((-1498L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.setIsExecuting(true);
      boolean boolean0 = eventBuffersDisabled0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      boolean boolean0 = eventBuffersDisabled0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      // Undeclared exception!
      try { 
        eventBuffersDisabled0.isStateActive((EventBuffersDisabled.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.EventBuffersDisabled", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.raiseL1();
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.runCycle();
      eventBuffersDisabled0.runCycle();
      assertTrue(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.raiseL2();
      eventBuffersDisabled0.runCycle();
      eventBuffersDisabled0.runCycle();
      assertTrue(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.raiseL2();
      eventBuffersDisabled0.runCycle();
      assertTrue(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.exit();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.enter();
      assertTrue(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.exit();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.raiseE();
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.runCycle();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R2_D;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertTrue(eventBuffersDisabled0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R2_C;
      eventBuffersDisabled0.enter();
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertTrue(eventBuffersDisabled0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.enter();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R1_A;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertTrue(eventBuffersDisabled0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R2_D;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R2_C;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R1_B;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.$NULLSTATE$;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R1_A;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.runCycle();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      boolean boolean0 = eventBuffersDisabled0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      assertFalse(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.enter();
      boolean boolean0 = eventBuffersDisabled0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.setIsExecuting(true);
      eventBuffersDisabled0.exit();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.exit();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.setIsExecuting(true);
      eventBuffersDisabled0.enter();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.setIsExecuting(true);
      eventBuffersDisabled0.runCycle();
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.raiseE();
      assertFalse(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.runCycle();
      eventBuffersDisabled0.raiseF();
      eventBuffersDisabled0.runCycle();
      assertTrue(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      boolean boolean0 = eventBuffersDisabled0.isFinal();
      assertFalse(boolean0);
      assertFalse(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.raiseL2();
      assertFalse(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.runCycle();
      EventBuffersDisabled.State eventBuffersDisabled_State0 = EventBuffersDisabled.State.R1_B;
      boolean boolean0 = eventBuffersDisabled0.isStateActive(eventBuffersDisabled_State0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      assertFalse(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.raiseL2();
      eventBuffersDisabled0.runCycle();
      eventBuffersDisabled0.raiseE();
      eventBuffersDisabled0.runCycle();
      assertTrue(eventBuffersDisabled0.isActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EventBuffersDisabled eventBuffersDisabled0 = new EventBuffersDisabled();
      eventBuffersDisabled0.raiseL1();
      eventBuffersDisabled0.enter();
      eventBuffersDisabled0.runCycle();
      assertTrue(eventBuffersDisabled0.isActive());
      
      eventBuffersDisabled0.exit();
      assertFalse(eventBuffersDisabled0.isActive());
  }
}
