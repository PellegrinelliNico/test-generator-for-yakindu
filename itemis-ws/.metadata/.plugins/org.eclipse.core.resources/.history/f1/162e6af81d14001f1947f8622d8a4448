/*
 * This file was automatically generated by EvoSuite
 * Thu May 16 21:01:15 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.System;
import statechart._MotorControl;
import statechart._Physics;
import statechart._Trolley;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class System_ESTest extends System_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System system0 = new System();
      system0.raisePhysics_update();
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System system0 = new System();
      boolean boolean0 = system0.nextEvent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      system0.raiseTrolley_setTargetSpeed(0.0);
      boolean boolean0 = system0.nextEvent();
      assertTrue(boolean0);
      
      double double0 = system0.getTrolley_setTargetSpeedValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System system0 = new System();
      _Trolley _Trolley0 = new _Trolley();
      _Trolley0.setStopsAt(0L);
      system0.setTrolley(_Trolley0);
      _Trolley _Trolley1 = system0.getTrolley();
      assertEquals(0L, _Trolley1.getStopsAt());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System system0 = new System();
      _Trolley _Trolley0 = new _Trolley();
      system0.setTrolley(_Trolley0);
      _Trolley _Trolley1 = system0.getTrolley();
      assertFalse(_Trolley1.isActive());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = new _Physics();
      _Physics0.setX((-2312.0));
      system0.setPhysics(_Physics0);
      _Physics _Physics1 = system0.getPhysics();
      assertFalse(_Physics1.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = new _Physics();
      _Physics0.setV(1161.537022269);
      system0.setPhysics(_Physics0);
      _Physics _Physics1 = system0.getPhysics();
      assertEquals(0.0, _Physics1.getA(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = new _Physics();
      _Physics0.setV((-714.097));
      system0.setPhysics(_Physics0);
      _Physics _Physics1 = system0.getPhysics();
      assertFalse(_Physics1.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      system0.raiseMotorControl_setAcceleration((-2530.5724));
      boolean boolean0 = system0.nextEvent();
      assertTrue(boolean0);
      
      double double0 = system0.getMotorControl_setAccelerationValue();
      assertEquals((-2530.5724), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System system0 = new System();
      _MotorControl _MotorControl0 = new _MotorControl();
      _MotorControl0.enter();
      system0.setMotorControl(_MotorControl0);
      _MotorControl _MotorControl1 = system0.getMotorControl();
      assertEquals(0.0, _MotorControl1.getTargetSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System system0 = new System();
      _MotorControl _MotorControl0 = new _MotorControl();
      system0.setMotorControl(_MotorControl0);
      _MotorControl _MotorControl1 = system0.getMotorControl();
      assertFalse(_MotorControl1.isFinal());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System system0 = new System();
      _MotorControl _MotorControl0 = new _MotorControl();
      _MotorControl0.setTargetSpeed((-2488.70449));
      system0.setMotorControl(_MotorControl0);
      _MotorControl _MotorControl1 = system0.getMotorControl();
      assertFalse(_MotorControl1.isFinal());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      boolean boolean0 = system0.getIsExecuting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System system0 = new System();
      boolean boolean0 = system0.getIsExecuting();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System system0 = new System();
      // Undeclared exception!
      try { 
        system0.isStateActive((System.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = new _Physics();
      system0.setPhysics(_Physics0);
      // Undeclared exception!
      try { 
        system0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart._Physics", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System system0 = new System();
      system0.setTrolley((_Trolley) null);
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      System system0 = new System();
      system0.setMotorControl((_MotorControl) null);
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System system0 = new System();
      system0.setPhysics((_Physics) null);
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = system0.getPhysics();
      assertNull(_Physics0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System system0 = new System();
      _Trolley _Trolley0 = new _Trolley();
      system0.setTrolley(_Trolley0);
      system0.setTrolley(_Trolley0);
      assertFalse(system0.isActive());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System system0 = new System();
      _MotorControl _MotorControl0 = new _MotorControl();
      system0.setMotorControl(_MotorControl0);
      system0.setMotorControl(_MotorControl0);
      assertEquals(0.0, _MotorControl0.getTargetSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = new _Physics();
      system0.setPhysics(_Physics0);
      system0.setPhysics(_Physics0);
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System system0 = new System();
      // Undeclared exception!
      try { 
        system0.getMotorControl_setAccelerationValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Illegal event value access. Event MotorControl_setAcceleration is not raised!
         //
         verifyException("statechart.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      system0.raiseMotorControl_setAcceleration(714.1597357376428);
      boolean boolean0 = system0.nextEvent();
      assertTrue(boolean0);
      
      double double0 = system0.getMotorControl_setAccelerationValue();
      assertEquals(714.1597357376428, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System system0 = new System();
      // Undeclared exception!
      try { 
        system0.getTrolley_setTargetSpeedValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Illegal event value access. Event Trolley_setTargetSpeed is not raised!
         //
         verifyException("statechart.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      _Trolley _Trolley0 = new _Trolley();
      system0.setTrolley(_Trolley0);
      _Trolley0.raiseSetTargetSpeed((-1.0));
      boolean boolean0 = system0.nextEvent();
      assertTrue(boolean0);
      
      double double0 = system0.getTrolley_setTargetSpeedValue();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System system0 = new System();
      System.State system_State0 = System.State.$NULLSTATE$;
      boolean boolean0 = system0.isStateActive(system_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System system0 = new System();
      System.State system_State0 = System.State.MAIN_REGION_SYSTEM;
      boolean boolean0 = system0.isStateActive(system_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System system0 = new System();
      System.State system_State0 = System.State.MAIN_REGION_SYSTEM_REGION_DEFAULT;
      boolean boolean0 = system0.isStateActive(system_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      system0.raiseTrolley_setTargetSpeed(0.0);
      system0.raiseMotorControl_setAcceleration(1301.234);
      system0.setIsExecuting(false);
      system0.triggerWithoutEvent();
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      System system0 = new System();
      boolean boolean0 = system0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      system0.exit();
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      System system0 = new System();
      system0.exit();
      assertFalse(system0.isActive());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      System system0 = new System();
      _MotorControl _MotorControl0 = system0.getMotorControl();
      assertNull(_MotorControl0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System system0 = new System();
      _Trolley _Trolley0 = system0.getTrolley();
      assertNull(_Trolley0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System system0 = new System();
      system0.setIsExecuting(true);
      system0.enter();
      assertFalse(system0.isFinal());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System system0 = new System();
      // Undeclared exception!
      try { 
        system0.enter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System system0 = new System();
      boolean boolean0 = system0.isFinal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      System system0 = new System();
      _MotorControl _MotorControl0 = new _MotorControl();
      system0.setMotorControl(_MotorControl0);
      _MotorControl0.raiseSetAcceleration((-989.1419860683069));
      assertFalse(_MotorControl0.isActive());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      System system0 = new System();
      _Physics _Physics0 = new _Physics();
      system0.setPhysics(_Physics0);
      _Physics0.raiseUpdate();
      assertEquals(0.0, _Physics0.getV(), 0.01);
  }
}
