/*
 * This file was automatically generated by EvoSuite
 * Thu May 16 21:30:58 GMT 2024
 */

package statechart2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.Test41Simplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Test41Simplified_ESTest extends Test41Simplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      // Undeclared exception!
      try { 
        test41Simplified0.isStateActive((Test41Simplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.Test41Simplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.Panel test41Simplified_Panel0 = new Test41Simplified.Panel(test41Simplified0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      Test41Simplified.Panel test41Simplified_Panel0 = test41Simplified0.panel();
      test41Simplified_Panel0.raiseBtn_pressed();
      test41Simplified0.triggerWithoutEvent();
      assertTrue(test41Simplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      test41Simplified0.triggerWithoutEvent();
      assertTrue(test41Simplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.exit();
      assertFalse(test41Simplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      assertTrue(test41Simplified0.isActive());
      
      test41Simplified0.exit();
      assertFalse(test41Simplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      Test41Simplified.Panel test41Simplified_Panel0 = test41Simplified0.panel();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEB_REGION_1_STATEC;
      test41Simplified_Panel0.raiseBtn_pressed();
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertTrue(test41Simplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.Panel test41Simplified_Panel0 = test41Simplified0.panel();
      test41Simplified0.enter();
      test41Simplified_Panel0.raiseBtn_pressed();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEB;
      test41Simplified_Panel0.raiseBtn_pressed();
      test41Simplified_Panel0.raiseBtn_pressed();
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertTrue(test41Simplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEB;
      test41Simplified0.enter();
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertTrue(test41Simplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEA;
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertTrue(test41Simplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.$NULLSTATE$;
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEB_REGION_1_STATED;
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEB_REGION_1_STATEC;
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEB;
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      Test41Simplified.State test41Simplified_State0 = Test41Simplified.State.MAIN_REGION_STATEA;
      boolean boolean0 = test41Simplified0.isStateActive(test41Simplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      boolean boolean0 = test41Simplified0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      boolean boolean0 = test41Simplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      boolean boolean0 = test41Simplified0.isFinal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.enter();
      Test41Simplified.Panel test41Simplified_Panel0 = test41Simplified0.panel();
      test41Simplified_Panel0.raiseBtn_pressed();
      assertTrue(test41Simplified0.isActive());
      
      test41Simplified0.exit();
      assertFalse(test41Simplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Test41Simplified test41Simplified0 = new Test41Simplified();
      test41Simplified0.triggerWithoutEvent();
      assertFalse(test41Simplified0.isFinal());
  }
}
