/*
 * This file was automatically generated by EvoSuite
 * Mon May 20 07:54:25 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.SuperStepsDisabledSimplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SuperStepsDisabledSimplified_ESTest extends SuperStepsDisabledSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      // Undeclared exception!
      try { 
        superStepsDisabledSimplified0.isStateActive((SuperStepsDisabledSimplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.SuperStepsDisabledSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      superStepsDisabledSimplified0.raiseE();
      superStepsDisabledSimplified0.raiseE();
      superStepsDisabledSimplified0.raiseE();
      assertTrue(superStepsDisabledSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      superStepsDisabledSimplified0.triggerWithoutEvent();
      assertTrue(superStepsDisabledSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.exit();
      assertFalse(superStepsDisabledSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      superStepsDisabledSimplified0.raiseE();
      assertTrue(superStepsDisabledSimplified0.isActive());
      
      superStepsDisabledSimplified0.exit();
      assertFalse(superStepsDisabledSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      assertTrue(superStepsDisabledSimplified0.isActive());
      
      superStepsDisabledSimplified0.exit();
      assertFalse(superStepsDisabledSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_C;
      superStepsDisabledSimplified0.raiseE();
      superStepsDisabledSimplified0.raiseE();
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertTrue(superStepsDisabledSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_B;
      superStepsDisabledSimplified0.raiseE();
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertTrue(superStepsDisabledSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_A;
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertTrue(superStepsDisabledSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_L;
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_C;
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_B;
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.$NULLSTATE$;
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      SuperStepsDisabledSimplified.State superStepsDisabledSimplified_State0 = SuperStepsDisabledSimplified.State.MAIN_REGION_A;
      boolean boolean0 = superStepsDisabledSimplified0.isStateActive(superStepsDisabledSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      boolean boolean0 = superStepsDisabledSimplified0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      boolean boolean0 = superStepsDisabledSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      boolean boolean0 = superStepsDisabledSimplified0.isFinal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.triggerWithoutEvent();
      assertFalse(superStepsDisabledSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SuperStepsDisabledSimplified superStepsDisabledSimplified0 = new SuperStepsDisabledSimplified();
      superStepsDisabledSimplified0.enter();
      superStepsDisabledSimplified0.raiseE();
      superStepsDisabledSimplified0.raiseE();
      assertTrue(superStepsDisabledSimplified0.isActive());
      
      superStepsDisabledSimplified0.exit();
      assertFalse(superStepsDisabledSimplified0.isActive());
  }
}
