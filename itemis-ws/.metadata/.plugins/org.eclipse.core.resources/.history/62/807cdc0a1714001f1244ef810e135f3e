/*
 * This file was automatically generated by EvoSuite
 * Thu May 16 19:37:06 GMT 2024
 */

package statechart2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class D_ESTest extends D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      D d0 = new D();
      d0.setX(2402L);
      long long0 = d0.getX();
      assertEquals(2402L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      D d0 = new D();
      d0.setX((-1372L));
      long long0 = d0.getX();
      assertEquals((-1372L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      D d0 = new D();
      d0.setStateConfVectorPosition(165L);
      long long0 = d0.getStateConfVectorPosition();
      assertEquals(165L, long0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      D d0 = new D();
      d0.setStateConfVectorPosition((-952L));
      long long0 = d0.getStateConfVectorPosition();
      assertEquals(0L, d0.getX());
      assertEquals((-952L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      D d0 = new D();
      d0.setIsExecuting(true);
      boolean boolean0 = d0.getIsExecuting();
      assertEquals(0L, d0.getX());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      D d0 = new D();
      boolean boolean0 = d0.getIsExecuting();
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      D d0 = new D();
      // Undeclared exception!
      try { 
        d0.isStateActive((D.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.D", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.$NULLSTATE$;
      d0.isStateActive(d_State0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL_R2_T;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL_R2_S;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL_R1_INITIAL;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL_R1_ONE;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertEquals(0L, d0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL_R1_ZERO;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      D d0 = new D();
      D.State d_State0 = D.State.MAIN_REGION_ORTHOGONAL_R1_TEMP;
      boolean boolean0 = d0.isStateActive(d_State0);
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      D d0 = new D();
      boolean boolean0 = d0.nextEvent();
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      D d0 = new D();
      boolean boolean0 = d0.isActive();
      assertEquals(0L, d0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      D d0 = new D();
      // Undeclared exception!
      try { 
        d0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.D", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      D d0 = new D();
      // Undeclared exception!
      try { 
        d0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.D", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      D d0 = new D();
      d0.getTimerService();
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      D d0 = new D();
      d0.setTimerService((ITimerService) null);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      D d0 = new D();
      d0.getStateConfVectorPosition();
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      D d0 = new D();
      boolean boolean0 = d0.isFinal();
      assertFalse(boolean0);
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      D d0 = new D();
      d0.setIsExecuting(true);
      d0.exit();
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      D d0 = new D();
      long long0 = d0.getX();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      D d0 = new D();
      assertFalse(d0.isActive());
      
      d0.exit();
      assertEquals(0L, d0.getX());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      D d0 = new D();
      // Undeclared exception!
      try { 
        d0.raiseTimeEvent(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.D", e);
      }
  }
}
