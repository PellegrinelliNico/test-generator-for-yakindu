testclass TrafficLightCtrlTest for statechart TrafficLightCtrl {
	@Test
	operation test00 () {
	    proceed 500ms
	    assert !is_active
	}

	@Test
	operation test04 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.normal.normal.Green)
	}

	@Test
	operation test05 () {
	}

	@Test
	operation test06 () {
	}

	@Test
	operation test07 () {
	    enter
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test08 () {
	    enter
	    raise toggle
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test09 () {
	    enter
	    raise toggle
	    exit
	    assert !is_active
	}

	@Test
	operation test10 () {
	    enter
	    raise toggle
	    enter
	    raise toggle
	    assert is_active
	}

	@Test
	operation test11 () {
	}

	@Test
	operation test12 () {
	    assert !active (TrafficLightCtrl.main.main.timer.running)
	}

	@Test
	operation test13 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.normal)
	}

	@Test
	operation test14 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.interrupted)
	}

	@Test
	operation test15 () {
	    assert !active (TrafficLightCtrl.main.main)
	}

	@Test
	operation test16 () {
	    assert !active (TrafficLightCtrl.main.main.timer.running.running.Red)
	}

	@Test
	operation test17 () {
	    assert !active (TrafficLightCtrl.main.main.timer.running.running.Green)
	}

	@Test
	operation test18 () {
	    assert !active (TrafficLightCtrl.main.main.timer.disabled)
	}

	@Test
	operation test19 () {
	    assert !active (TrafficLightCtrl.main.off)
	}

	@Test
	operation test20 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.normal.normal.Yellow)
	}

	@Test
	operation test21 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.normal.normal.Red)
	}

	@Test
	operation test22 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.interrupted.blinking.Yellow)
	}

	@Test
	operation test23 () {
	    assert !active (TrafficLightCtrl.main.main.trafficlight.interrupted.blinking.Black)
	}

	@Test
	operation test24 () {
	    raise police_interrupt
	    assert !is_final
	}

	@Test
	operation test25 () {
	    assert !is_active
	}

	@Test
	operation test26 () {
	    assert !is_active
	    enter
	    assert is_active
	}

	@Test
	operation test27 () {
	    exit
	    assert !is_active
	}

	@Test
	operation test31 () {
	    assert !is_active
	}

	@Test
	operation test32 () {
	    assert !is_active
	}

	@Test
	operation test33 () {
	    enter
	    raise toggle
	    raise police_interrupt
	    raise toggle
	    assert !is_final
	}

	@Test
	operation test34 () {
	    assert !is_final
	    assert !is_active
	}

	@Test
	operation test35 () {
	    enter
	    raise toggle
	    raise toggle
	    assert is_active
	    exit
	    assert !is_active
	}

}