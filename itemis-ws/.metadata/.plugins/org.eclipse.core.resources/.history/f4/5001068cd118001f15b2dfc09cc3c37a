/*
 * This file was automatically generated by EvoSuite
 * Tue May 21 07:28:46 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.Actuator_Component;
import statechart.Controller_Component;
import statechart.Power_Component;
import statechart.Ultrasonic_MotionDetectorSimplified;
import statechart.Ultrasonic_Sensor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Ultrasonic_MotionDetectorSimplified_ESTest extends Ultrasonic_MotionDetectorSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified0.isStateActive((Ultrasonic_MotionDetectorSimplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Trigger ultrasonic_MotionDetectorSimplified_Trigger0 = new Ultrasonic_MotionDetectorSimplified.Trigger(ultrasonic_MotionDetectorSimplified0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified.Frequency ultrasonic_MotionDetectorSimplified_Frequency0 = new Ultrasonic_MotionDetectorSimplified.Frequency();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Power_Component power_Component0 = new Power_Component();
      ultrasonic_MotionDetectorSimplified0.setPowerSupply(power_Component0);
      assertFalse(ultrasonic_MotionDetectorSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified.Comparator ultrasonic_MotionDetectorSimplified_Comparator0 = new Ultrasonic_MotionDetectorSimplified.Comparator();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Controller_Component controller_Component0 = new Controller_Component();
      ultrasonic_MotionDetectorSimplified0.setController(controller_Component0);
      assertFalse(controller_Component0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Actuator_Component actuator_Component0 = new Actuator_Component();
      ultrasonic_MotionDetectorSimplified0.setActuator(actuator_Component0);
      assertFalse(ultrasonic_MotionDetectorSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified.Oscillator ultrasonic_MotionDetectorSimplified_Oscillator0 = new Ultrasonic_MotionDetectorSimplified.Oscillator();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified.Power ultrasonic_MotionDetectorSimplified_Power0 = new Ultrasonic_MotionDetectorSimplified.Power();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_Sensor ultrasonic_Sensor0 = new Ultrasonic_Sensor();
      ultrasonic_MotionDetectorSimplified0.setSensor(ultrasonic_Sensor0);
      assertFalse(ultrasonic_Sensor0.getActivity());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.$NULLSTATE$;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__POWER_POWERSUPPLYSTATUS;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__COMPARATOR_READING_SENSOR_DATA;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING_;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__POWER_POWERSUPPLYSTATUS_STATUS_CONSUMINGMINIMUM;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__ACTUATOR_ACTUATE_TRIGGER;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__ACTUATOR_ONSTANDBY;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__COMPARATOR_READING_SENSOR_DATA_PROCESSING_COMPARING;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__COMPARATOR_READING_SENSOR_DATA_PROCESSING_CIRCUIT_CHANGED;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__OFF_;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__SENSOR_RECEIVING;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__POWER_POWERSUPPLYSTATUS_STATUS_CIRCUITTRIGGER;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.State ultrasonic_MotionDetectorSimplified_State0 = Ultrasonic_MotionDetectorSimplified.State.ULTRASONIC_MOTIONDETECTOR__DETECTING__SENSOR_TRANSMITTING;
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isStateActive(ultrasonic_MotionDetectorSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Status ultrasonic_MotionDetectorSimplified_Status0 = new Ultrasonic_MotionDetectorSimplified.Status(ultrasonic_MotionDetectorSimplified0);
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified_Status0.raiseActivitySensed();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Status ultrasonic_MotionDetectorSimplified_Status0 = new Ultrasonic_MotionDetectorSimplified.Status(ultrasonic_MotionDetectorSimplified0);
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified_Status0.raiseNoActivitySensed();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Oscillator ultrasonic_MotionDetectorSimplified_Oscillator0 = ultrasonic_MotionDetectorSimplified0.oscillator();
      assertNotNull(ultrasonic_MotionDetectorSimplified_Oscillator0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Comparator ultrasonic_MotionDetectorSimplified_Comparator0 = ultrasonic_MotionDetectorSimplified0.comparator();
      assertNotNull(ultrasonic_MotionDetectorSimplified_Comparator0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified0.raiseTimeEvent(3155);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      ultrasonic_MotionDetectorSimplified0.exit();
      assertFalse(ultrasonic_MotionDetectorSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      ultrasonic_MotionDetectorSimplified0.frequency();
      assertFalse(ultrasonic_MotionDetectorSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified0.raiseOn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      boolean boolean0 = ultrasonic_MotionDetectorSimplified0.isFinal();
      assertFalse(boolean0);
      assertFalse(ultrasonic_MotionDetectorSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      ultrasonic_MotionDetectorSimplified0.setTimerService((ITimerService) null);
      assertFalse(ultrasonic_MotionDetectorSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      ultrasonic_MotionDetectorSimplified0.status();
      assertFalse(ultrasonic_MotionDetectorSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified0.raiseOff();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      ultrasonic_MotionDetectorSimplified0.power();
      assertFalse(ultrasonic_MotionDetectorSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Trigger ultrasonic_MotionDetectorSimplified_Trigger0 = ultrasonic_MotionDetectorSimplified0.trigger();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified_Trigger0.raiseOff();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Ultrasonic_MotionDetectorSimplified ultrasonic_MotionDetectorSimplified0 = new Ultrasonic_MotionDetectorSimplified();
      Ultrasonic_MotionDetectorSimplified.Trigger ultrasonic_MotionDetectorSimplified_Trigger0 = ultrasonic_MotionDetectorSimplified0.trigger();
      // Undeclared exception!
      try { 
        ultrasonic_MotionDetectorSimplified_Trigger0.raiseOn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.Ultrasonic_MotionDetectorSimplified", e);
      }
  }
}
