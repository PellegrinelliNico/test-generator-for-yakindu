/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 20 08:08:03 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.OrthogonalitySimplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OrthogonalitySimplified_ESTest extends OrthogonalitySimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      // Undeclared exception!
      try { 
        orthogonalitySimplified0.isStateActive((OrthogonalitySimplified.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.OrthogonalitySimplified", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R2_LINE_B_2;
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.runCycle();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R1_LINE_A_2;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R1_LINE_A_2;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
      
      orthogonalitySimplified0.exit();
      assertFalse(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.exit();
      assertFalse(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
      
      orthogonalitySimplified0.exit();
      assertFalse(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      assertTrue(orthogonalitySimplified0.isActive());
      
      orthogonalitySimplified0.exit();
      assertFalse(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.runCycle();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_CLEANUP;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION__FINAL_;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R2_LINE_B_2;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R2_LINE_B_1;
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R1_LINE_A_1;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_INITIALIZE;
      orthogonalitySimplified0.enter();
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.$NULLSTATE$;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R2_LINE_B_1;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_CLEANUP;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION__FINAL_;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_PROCESS_R1_LINE_A_1;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      OrthogonalitySimplified.State orthogonalitySimplified_State0 = OrthogonalitySimplified.State.MAIN_REGION_INITIALIZE;
      boolean boolean0 = orthogonalitySimplified0.isStateActive(orthogonalitySimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      boolean boolean0 = orthogonalitySimplified0.isFinal();
      assertTrue(orthogonalitySimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      boolean boolean0 = orthogonalitySimplified0.isFinal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      boolean boolean0 = orthogonalitySimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      boolean boolean0 = orthogonalitySimplified0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isActive());
      
      orthogonalitySimplified0.exit();
      assertFalse(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.runCycle();
      assertTrue(orthogonalitySimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.enter();
      orthogonalitySimplified0.raiseProceed();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePb();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.raisePa();
      orthogonalitySimplified0.runCycle();
      orthogonalitySimplified0.exit();
      assertFalse(orthogonalitySimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OrthogonalitySimplified orthogonalitySimplified0 = new OrthogonalitySimplified();
      orthogonalitySimplified0.runCycle();
      assertFalse(orthogonalitySimplified0.isActive());
  }
}
