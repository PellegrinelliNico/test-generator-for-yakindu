/*
 * This file was automatically generated by EvoSuite
 * Tue May 21 08:03:39 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yakindu.core.ITimerService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.Actuator_Component;
import statechart.Controller_Component;
import statechart.DeviceTemp_Component;
import statechart.Network_Component;
import statechart.Power_Component;
import statechart.Sensor_Component;
import statechart.SmartTVSystem;
import statechart.TV_Unit;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartTVSystem_ESTest extends SmartTVSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.SensorOutput smartTVSystem_SensorOutput0 = smartTVSystem0.sensorOutput();
      smartTVSystem_SensorOutput0.setCounter(786L);
      assertEquals(786L, smartTVSystem_SensorOutput0.getCounter());
      
      SmartTVSystem.SensorOutput smartTVSystem_SensorOutput1 = smartTVSystem0.sensorOutput();
      assertFalse(smartTVSystem_SensorOutput1.getActivity());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.SensorInput smartTVSystem_SensorInput0 = new SmartTVSystem.SensorInput();
      smartTVSystem_SensorInput0.setTimeout_time((-260L));
      smartTVSystem0.sensorInput = smartTVSystem_SensorInput0;
      assertEquals((-260L), smartTVSystem_SensorInput0.getTimeout_time());
      
      smartTVSystem0.sensorInput();
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.SensorInput smartTVSystem_SensorInput0 = new SmartTVSystem.SensorInput();
      smartTVSystem0.sensorInput = smartTVSystem_SensorInput0;
      smartTVSystem0.sensorInput();
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      assertFalse(smartTVSystem0.getWiFi_connection());
      
      smartTVSystem0.setWiFi_connection(true);
      boolean boolean0 = smartTVSystem0.getWiFi_connection();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setPower_required((-2179L));
      long long0 = smartTVSystem0.getPower_required();
      assertEquals((-2179L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getIsExecuting();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      // Undeclared exception!
      try { 
        smartTVSystem0.isStateActive((SmartTVSystem.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      TV_Unit tV_Unit0 = new TV_Unit();
      smartTVSystem0.setTV(tV_Unit0);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setMessage("FLk?ON/-");
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setPower_total((-235L));
      assertEquals((-235L), smartTVSystem0.getPower_total());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartTVSystem.SensorOutput smartTVSystem_SensorOutput0 = new SmartTVSystem.SensorOutput();
      smartTVSystem_SensorOutput0.setActivity(false);
      assertFalse(smartTVSystem_SensorOutput0.getActivity());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      Actuator_Component actuator_Component0 = new Actuator_Component();
      smartTVSystem0.setActuator(actuator_Component0);
      smartTVSystem0.getActuator();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      Controller_Component controller_Component0 = new Controller_Component();
      smartTVSystem0.setController(controller_Component0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.System smartTVSystem_System0 = smartTVSystem0.system();
      smartTVSystem_System0.setIsOn(false);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertFalse(smartTVSystem_System0.getIsOn());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      assertEquals(50L, smartTVSystem0.getPower_input());
      
      smartTVSystem0.setPower_input(0L);
      smartTVSystem0.getPower_input();
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      Network_Component network_Component0 = new Network_Component();
      smartTVSystem0.setWiFi(network_Component0);
      smartTVSystem0.getWiFi();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setTemp((DeviceTemp_Component) null);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      Sensor_Component sensor_Component0 = new Sensor_Component();
      smartTVSystem0.setSensor(sensor_Component0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      Power_Component power_Component0 = new Power_Component();
      smartTVSystem0.setPower(power_Component0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      
      smartTVSystem0.setTemp_value(0L);
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State.$NULLSTATE$;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_NETWORKCOMPONENT__INITIALIZE_WIFI_COMPONENT_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM;
      boolean boolean0 = smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertFalse(boolean0);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_TRACKINGDEVICETEMPERATURE_OFF;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_POWERCALCULATORCOMPONENT_OFF;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_NETWORKCOMPONENT_OFF;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_NETWORKCOMPONENT__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_SENSORCOMPONENT_OFF;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_CONTROLLERCOMPONENT_OFF;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_ACTUATORCOMPONENT_OFF;
      boolean boolean0 = smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(boolean0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_;
      boolean boolean0 = smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(boolean0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_;
      boolean boolean0 = smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_SYSTEMSTATUS_ON;
      boolean boolean0 = smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertFalse(boolean0);
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT_;
      smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.State smartTVSystem_State0 = SmartTVSystem.State._SMARTTVSYSTEM__SMARTTVSYSTEM_SYSTEMSTATUS_OFF;
      boolean boolean0 = smartTVSystem0.isStateActive(smartTVSystem_State0);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertFalse(boolean0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      boolean boolean0 = smartTVSystem0.nextEvent();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertFalse(boolean0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      boolean boolean0 = smartTVSystem0.isActive();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(boolean0);
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      // Undeclared exception!
      try { 
        smartTVSystem0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.System smartTVSystem_System0 = new SmartTVSystem.System(smartTVSystem0);
      // Undeclared exception!
      try { 
        smartTVSystem_System0.raiseOn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.System smartTVSystem_System0 = new SmartTVSystem.System(smartTVSystem0);
      // Undeclared exception!
      try { 
        smartTVSystem_System0.raiseDisconnect_network();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.System smartTVSystem_System0 = new SmartTVSystem.System(smartTVSystem0);
      // Undeclared exception!
      try { 
        smartTVSystem_System0.raiseConnect_network();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.System smartTVSystem_System0 = new SmartTVSystem.System(smartTVSystem0);
      // Undeclared exception!
      try { 
        smartTVSystem_System0.raiseOff();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SmartTVSystem.SensorOutput smartTVSystem_SensorOutput0 = new SmartTVSystem.SensorOutput();
      boolean boolean0 = smartTVSystem_SensorOutput0.getActivity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SmartTVSystem.SensorOutput smartTVSystem_SensorOutput0 = new SmartTVSystem.SensorOutput();
      long long0 = smartTVSystem_SensorOutput0.getCounter();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SmartTVSystem.SensorInput smartTVSystem_SensorInput0 = new SmartTVSystem.SensorInput();
      long long0 = smartTVSystem_SensorInput0.getDetection_time();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SmartTVSystem.SensorInput smartTVSystem_SensorInput0 = new SmartTVSystem.SensorInput();
      long long0 = smartTVSystem_SensorInput0.getTimeout_time();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      boolean boolean0 = smartTVSystem0.getWiFi_connection();
      assertFalse(boolean0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      long long0 = smartTVSystem0.getPower_input();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, long0);
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getController();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getPower();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.SensorInput smartTVSystem_SensorInput0 = smartTVSystem0.sensorInput();
      assertEquals(5L, smartTVSystem_SensorInput0.getDetection_time());
      
      smartTVSystem_SensorInput0.setDetection_time(0L);
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.SensorOutput smartTVSystem_SensorOutput0 = smartTVSystem0.sensorOutput();
      smartTVSystem_SensorOutput0.setCounter((-2323L));
      assertEquals((-2323L), smartTVSystem_SensorOutput0.getCounter());
      
      smartTVSystem0.sensorOutput();
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getStateConfVectorPosition();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      // Undeclared exception!
      try { 
        smartTVSystem0.triggerWithoutEvent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getActuator();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      // Undeclared exception!
      try { 
        smartTVSystem0.raiseTimeEvent(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Timer service must be set.
         //
         verifyException("statechart.SmartTVSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      boolean boolean0 = smartTVSystem0.isFinal();
      assertFalse(boolean0);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      long long0 = smartTVSystem0.getPower_required();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, long0);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      long long0 = smartTVSystem0.getTemp_value();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, long0);
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getWiFi();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getTimerService();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setStateConfVectorPosition(10L);
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getTV();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getSensor();
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setIsExecuting(true);
      smartTVSystem0.exit();
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getPower_total();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      assertFalse(smartTVSystem0.isActive());
      
      smartTVSystem0.exit();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      SmartTVSystem.System smartTVSystem_System0 = smartTVSystem0.system();
      boolean boolean0 = smartTVSystem_System0.getIsOn();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertFalse(boolean0);
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.isActive());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getMessage();
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertFalse(smartTVSystem0.isActive());
      assertEquals(50L, smartTVSystem0.getPower_input());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.setTimerService((ITimerService) null);
      assertEquals(10L, smartTVSystem0.getPower_required());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.isActive());
      assertFalse(smartTVSystem0.getWiFi_connection());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SmartTVSystem smartTVSystem0 = new SmartTVSystem();
      smartTVSystem0.getTemp();
      assertEquals(50L, smartTVSystem0.getTemp_value());
      assertFalse(smartTVSystem0.getWiFi_connection());
      assertEquals(50L, smartTVSystem0.getPower_input());
      assertFalse(smartTVSystem0.isActive());
      assertEquals(10L, smartTVSystem0.getPower_required());
  }
}
